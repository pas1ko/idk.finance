{"version":3,"file":"prediction_market.js","sources":["../node_modules/near-sdk-js/lib/types/vm_types.js","../node_modules/near-sdk-js/lib/utils.js","../node_modules/@scure/base/lib/esm/index.js","../node_modules/near-sdk-js/lib/types/public_key.js","../node_modules/near-sdk-js/lib/api.js","../node_modules/near-sdk-js/lib/near-bindgen.js","../node_modules/near-sdk-js/lib/collections/lookup-map.js","../node_modules/near-sdk-js/lib/collections/vector.js","../node_modules/near-sdk-js/lib/collections/unordered-set.js","../src/BetInfo.ts","../src/Round.ts","../src/PredictionMarket.ts"],"sourcesContent":["export var PromiseResult;\n(function (PromiseResult) {\n    PromiseResult[PromiseResult[\"NotReady\"] = 0] = \"NotReady\";\n    PromiseResult[PromiseResult[\"Successful\"] = 1] = \"Successful\";\n    PromiseResult[PromiseResult[\"Failed\"] = 2] = \"Failed\";\n})(PromiseResult || (PromiseResult = {}));\nexport var PromiseError;\n(function (PromiseError) {\n    PromiseError[PromiseError[\"Failed\"] = 0] = \"Failed\";\n    PromiseError[PromiseError[\"NotReady\"] = 1] = \"NotReady\";\n})(PromiseError || (PromiseError = {}));\n","export function u8ArrayToBytes(array) {\n    let ret = \"\";\n    for (let e of array) {\n        ret += String.fromCharCode(e);\n    }\n    return ret;\n}\n// TODO this function is a bit broken and the type can't be string\n// TODO for more info: https://github.com/near/near-sdk-js/issues/78\nexport function bytesToU8Array(bytes) {\n    let ret = new Uint8Array(bytes.length);\n    for (let i = 0; i < bytes.length; i++) {\n        ret[i] = bytes.charCodeAt(i);\n    }\n    return ret;\n}\nexport function bytes(strOrU8Array) {\n    if (typeof strOrU8Array == \"string\") {\n        return checkStringIsBytes(strOrU8Array);\n    }\n    else if (strOrU8Array instanceof Uint8Array) {\n        return u8ArrayToBytes(strOrU8Array);\n    }\n    throw new Error(\"bytes: expected string or Uint8Array\");\n}\nfunction checkStringIsBytes(str) {\n    for (let i = 0; i < str.length; i++) {\n        if (str.charCodeAt(i) > 255) {\n            throw new Error(`string ${str} at index ${i}: ${str[i]} is not a valid byte`);\n        }\n    }\n    return str;\n}\nexport function assert(b, str) {\n    if (b) {\n        return;\n    }\n    else {\n        throw Error(\"assertion failed: \" + str);\n    }\n}\n","/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nexport function assertNumber(n) {\n    if (!Number.isSafeInteger(n))\n        throw new Error(`Wrong integer: ${n}`);\n}\nfunction chain(...args) {\n    const wrap = (a, b) => (c) => a(b(c));\n    const encode = Array.from(args)\n        .reverse()\n        .reduce((acc, i) => (acc ? wrap(acc, i.encode) : i.encode), undefined);\n    const decode = args.reduce((acc, i) => (acc ? wrap(acc, i.decode) : i.decode), undefined);\n    return { encode, decode };\n}\nfunction alphabet(alphabet) {\n    return {\n        encode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('alphabet.encode input should be an array of numbers');\n            return digits.map((i) => {\n                assertNumber(i);\n                if (i < 0 || i >= alphabet.length)\n                    throw new Error(`Digit index outside alphabet: ${i} (alphabet: ${alphabet.length})`);\n                return alphabet[i];\n            });\n        },\n        decode: (input) => {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('alphabet.decode input should be array of strings');\n            return input.map((letter) => {\n                if (typeof letter !== 'string')\n                    throw new Error(`alphabet.decode: not string element=${letter}`);\n                const index = alphabet.indexOf(letter);\n                if (index === -1)\n                    throw new Error(`Unknown letter: \"${letter}\". Allowed: ${alphabet}`);\n                return index;\n            });\n        },\n    };\n}\nfunction join(separator = '') {\n    if (typeof separator !== 'string')\n        throw new Error('join separator should be string');\n    return {\n        encode: (from) => {\n            if (!Array.isArray(from) || (from.length && typeof from[0] !== 'string'))\n                throw new Error('join.encode input should be array of strings');\n            for (let i of from)\n                if (typeof i !== 'string')\n                    throw new Error(`join.encode: non-string input=${i}`);\n            return from.join(separator);\n        },\n        decode: (to) => {\n            if (typeof to !== 'string')\n                throw new Error('join.decode input should be string');\n            return to.split(separator);\n        },\n    };\n}\nfunction padding(bits, chr = '=') {\n    assertNumber(bits);\n    if (typeof chr !== 'string')\n        throw new Error('padding chr should be string');\n    return {\n        encode(data) {\n            if (!Array.isArray(data) || (data.length && typeof data[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of data)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.encode: non-string input=${i}`);\n            while ((data.length * bits) % 8)\n                data.push(chr);\n            return data;\n        },\n        decode(input) {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of input)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.decode: non-string input=${i}`);\n            let end = input.length;\n            if ((end * bits) % 8)\n                throw new Error('Invalid padding: string should have whole number of bytes');\n            for (; end > 0 && input[end - 1] === chr; end--) {\n                if (!(((end - 1) * bits) % 8))\n                    throw new Error('Invalid padding: string has too much padding');\n            }\n            return input.slice(0, end);\n        },\n    };\n}\nfunction normalize(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('normalize fn should be function');\n    return { encode: (from) => from, decode: (to) => fn(to) };\n}\nfunction convertRadix(data, from, to) {\n    if (from < 2)\n        throw new Error(`convertRadix: wrong from=${from}, base cannot be less than 2`);\n    if (to < 2)\n        throw new Error(`convertRadix: wrong to=${to}, base cannot be less than 2`);\n    if (!Array.isArray(data))\n        throw new Error('convertRadix: data should be array');\n    if (!data.length)\n        return [];\n    let pos = 0;\n    const res = [];\n    const digits = Array.from(data);\n    digits.forEach((d) => {\n        assertNumber(d);\n        if (d < 0 || d >= from)\n            throw new Error(`Wrong integer: ${d}`);\n    });\n    while (true) {\n        let carry = 0;\n        let done = true;\n        for (let i = pos; i < digits.length; i++) {\n            const digit = digits[i];\n            const digitBase = from * carry + digit;\n            if (!Number.isSafeInteger(digitBase) ||\n                (from * carry) / from !== carry ||\n                digitBase - digit !== from * carry) {\n                throw new Error('convertRadix: carry overflow');\n            }\n            carry = digitBase % to;\n            digits[i] = Math.floor(digitBase / to);\n            if (!Number.isSafeInteger(digits[i]) || digits[i] * to + carry !== digitBase)\n                throw new Error('convertRadix: carry overflow');\n            if (!done)\n                continue;\n            else if (!digits[i])\n                pos = i;\n            else\n                done = false;\n        }\n        res.push(carry);\n        if (done)\n            break;\n    }\n    for (let i = 0; i < data.length - 1 && data[i] === 0; i++)\n        res.push(0);\n    return res.reverse();\n}\nconst gcd = (a, b) => (!b ? a : gcd(b, a % b));\nconst radix2carry = (from, to) => from + (to - gcd(from, to));\nfunction convertRadix2(data, from, to, padding) {\n    if (!Array.isArray(data))\n        throw new Error('convertRadix2: data should be array');\n    if (from <= 0 || from > 32)\n        throw new Error(`convertRadix2: wrong from=${from}`);\n    if (to <= 0 || to > 32)\n        throw new Error(`convertRadix2: wrong to=${to}`);\n    if (radix2carry(from, to) > 32) {\n        throw new Error(`convertRadix2: carry overflow from=${from} to=${to} carryBits=${radix2carry(from, to)}`);\n    }\n    let carry = 0;\n    let pos = 0;\n    const mask = 2 ** to - 1;\n    const res = [];\n    for (const n of data) {\n        assertNumber(n);\n        if (n >= 2 ** from)\n            throw new Error(`convertRadix2: invalid data word=${n} from=${from}`);\n        carry = (carry << from) | n;\n        if (pos + from > 32)\n            throw new Error(`convertRadix2: carry overflow pos=${pos} from=${from}`);\n        pos += from;\n        for (; pos >= to; pos -= to)\n            res.push(((carry >> (pos - to)) & mask) >>> 0);\n        carry &= 2 ** pos - 1;\n    }\n    carry = (carry << (to - pos)) & mask;\n    if (!padding && pos >= from)\n        throw new Error('Excess padding');\n    if (!padding && carry)\n        throw new Error(`Non-zero padding: ${carry}`);\n    if (padding && pos > 0)\n        res.push(carry >>> 0);\n    return res;\n}\nfunction radix(num) {\n    assertNumber(num);\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix.encode input should be Uint8Array');\n            return convertRadix(Array.from(bytes), 2 ** 8, num);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix.decode input should be array of strings');\n            return Uint8Array.from(convertRadix(digits, num, 2 ** 8));\n        },\n    };\n}\nfunction radix2(bits, revPadding = false) {\n    assertNumber(bits);\n    if (bits <= 0 || bits > 32)\n        throw new Error('radix2: bits should be in (0..32]');\n    if (radix2carry(8, bits) > 32 || radix2carry(bits, 8) > 32)\n        throw new Error('radix2: carry overflow');\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix2.encode input should be Uint8Array');\n            return convertRadix2(Array.from(bytes), 8, bits, !revPadding);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix2.decode input should be array of strings');\n            return Uint8Array.from(convertRadix2(digits, bits, 8, revPadding));\n        },\n    };\n}\nfunction unsafeWrapper(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('unsafeWrapper fn should be function');\n    return function (...args) {\n        try {\n            return fn.apply(null, args);\n        }\n        catch (e) { }\n    };\n}\nfunction checksum(len, fn) {\n    assertNumber(len);\n    if (typeof fn !== 'function')\n        throw new Error('checksum fn should be function');\n    return {\n        encode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.encode: input should be Uint8Array');\n            const checksum = fn(data).slice(0, len);\n            const res = new Uint8Array(data.length + len);\n            res.set(data);\n            res.set(checksum, data.length);\n            return res;\n        },\n        decode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.decode: input should be Uint8Array');\n            const payload = data.slice(0, -len);\n            const newChecksum = fn(payload).slice(0, len);\n            const oldChecksum = data.slice(-len);\n            for (let i = 0; i < len; i++)\n                if (newChecksum[i] !== oldChecksum[i])\n                    throw new Error('Invalid checksum');\n            return payload;\n        },\n    };\n}\nexport const utils = { alphabet, chain, checksum, radix, radix2, join, padding };\nexport const base16 = chain(radix2(4), alphabet('0123456789ABCDEF'), join(''));\nexport const base32 = chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), padding(5), join(''));\nexport const base32hex = chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), padding(5), join(''));\nexport const base32crockford = chain(radix2(5), alphabet('0123456789ABCDEFGHJKMNPQRSTVWXYZ'), join(''), normalize((s) => s.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1')));\nexport const base64 = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), padding(6), join(''));\nexport const base64url = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), padding(6), join(''));\nconst genBase58 = (abc) => chain(radix(58), alphabet(abc), join(''));\nexport const base58 = genBase58('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz');\nexport const base58flickr = genBase58('123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ');\nexport const base58xrp = genBase58('rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz');\nconst XMR_BLOCK_LEN = [0, 2, 3, 5, 6, 7, 9, 10, 11];\nexport const base58xmr = {\n    encode(data) {\n        let res = '';\n        for (let i = 0; i < data.length; i += 8) {\n            const block = data.subarray(i, i + 8);\n            res += base58.encode(block).padStart(XMR_BLOCK_LEN[block.length], '1');\n        }\n        return res;\n    },\n    decode(str) {\n        let res = [];\n        for (let i = 0; i < str.length; i += 11) {\n            const slice = str.slice(i, i + 11);\n            const blockLen = XMR_BLOCK_LEN.indexOf(slice.length);\n            const block = base58.decode(slice);\n            for (let j = 0; j < block.length - blockLen; j++) {\n                if (block[j] !== 0)\n                    throw new Error('base58xmr: wrong padding');\n            }\n            res = res.concat(Array.from(block.slice(block.length - blockLen)));\n        }\n        return Uint8Array.from(res);\n    },\n};\nexport const base58check = (sha256) => chain(checksum(4, (data) => sha256(sha256(data))), base58);\nconst BECH_ALPHABET = chain(alphabet('qpzry9x8gf2tvdw0s3jn54khce6mua7l'), join(''));\nconst POLYMOD_GENERATORS = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\nfunction bech32Polymod(pre) {\n    const b = pre >> 25;\n    let chk = (pre & 0x1ffffff) << 5;\n    for (let i = 0; i < POLYMOD_GENERATORS.length; i++) {\n        if (((b >> i) & 1) === 1)\n            chk ^= POLYMOD_GENERATORS[i];\n    }\n    return chk;\n}\nfunction bechChecksum(prefix, words, encodingConst = 1) {\n    const len = prefix.length;\n    let chk = 1;\n    for (let i = 0; i < len; i++) {\n        const c = prefix.charCodeAt(i);\n        if (c < 33 || c > 126)\n            throw new Error(`Invalid prefix (${prefix})`);\n        chk = bech32Polymod(chk) ^ (c >> 5);\n    }\n    chk = bech32Polymod(chk);\n    for (let i = 0; i < len; i++)\n        chk = bech32Polymod(chk) ^ (prefix.charCodeAt(i) & 0x1f);\n    for (let v of words)\n        chk = bech32Polymod(chk) ^ v;\n    for (let i = 0; i < 6; i++)\n        chk = bech32Polymod(chk);\n    chk ^= encodingConst;\n    return BECH_ALPHABET.encode(convertRadix2([chk % 2 ** 30], 30, 5, false));\n}\nfunction genBech32(encoding) {\n    const ENCODING_CONST = encoding === 'bech32' ? 1 : 0x2bc830a3;\n    const _words = radix2(5);\n    const fromWords = _words.decode;\n    const toWords = _words.encode;\n    const fromWordsUnsafe = unsafeWrapper(fromWords);\n    function encode(prefix, words, limit = 90) {\n        if (typeof prefix !== 'string')\n            throw new Error(`bech32.encode prefix should be string, not ${typeof prefix}`);\n        if (!Array.isArray(words) || (words.length && typeof words[0] !== 'number'))\n            throw new Error(`bech32.encode words should be array of numbers, not ${typeof words}`);\n        const actualLength = prefix.length + 7 + words.length;\n        if (limit !== false && actualLength > limit)\n            throw new TypeError(`Length ${actualLength} exceeds limit ${limit}`);\n        prefix = prefix.toLowerCase();\n        return `${prefix}1${BECH_ALPHABET.encode(words)}${bechChecksum(prefix, words, ENCODING_CONST)}`;\n    }\n    function decode(str, limit = 90) {\n        if (typeof str !== 'string')\n            throw new Error(`bech32.decode input should be string, not ${typeof str}`);\n        if (str.length < 8 || (limit !== false && str.length > limit))\n            throw new TypeError(`Wrong string length: ${str.length} (${str}). Expected (8..${limit})`);\n        const lowered = str.toLowerCase();\n        if (str !== lowered && str !== str.toUpperCase())\n            throw new Error(`String must be lowercase or uppercase`);\n        str = lowered;\n        const sepIndex = str.lastIndexOf('1');\n        if (sepIndex === 0 || sepIndex === -1)\n            throw new Error(`Letter \"1\" must be present between prefix and data only`);\n        const prefix = str.slice(0, sepIndex);\n        const _words = str.slice(sepIndex + 1);\n        if (_words.length < 6)\n            throw new Error('Data must be at least 6 characters long');\n        const words = BECH_ALPHABET.decode(_words).slice(0, -6);\n        const sum = bechChecksum(prefix, words, ENCODING_CONST);\n        if (!_words.endsWith(sum))\n            throw new Error(`Invalid checksum in ${str}: expected \"${sum}\"`);\n        return { prefix, words };\n    }\n    const decodeUnsafe = unsafeWrapper(decode);\n    function decodeToBytes(str) {\n        const { prefix, words } = decode(str, false);\n        return { prefix, words, bytes: fromWords(words) };\n    }\n    return { encode, decode, decodeToBytes, decodeUnsafe, fromWords, fromWordsUnsafe, toWords };\n}\nexport const bech32 = genBech32('bech32');\nexport const bech32m = genBech32('bech32m');\nexport const utf8 = {\n    encode: (data) => new TextDecoder().decode(data),\n    decode: (str) => new TextEncoder().encode(str),\n};\nexport const hex = chain(radix2(4), alphabet('0123456789abcdef'), join(''), normalize((s) => {\n    if (typeof s !== 'string' || s.length % 2)\n        throw new TypeError(`hex.decode: expected string, got ${typeof s} with length ${s.length}`);\n    return s.toLowerCase();\n}));\nconst CODERS = {\n    utf8, hex, base16, base32, base64, base64url, base58, base58xmr\n};\nconst coderTypeError = `Invalid encoding type. Available types: ${Object.keys(CODERS).join(', ')}`;\nexport const bytesToString = (type, bytes) => {\n    if (typeof type !== 'string' || !CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (!(bytes instanceof Uint8Array))\n        throw new TypeError('bytesToString() expects Uint8Array');\n    return CODERS[type].encode(bytes);\n};\nexport const str = bytesToString;\nexport const stringToBytes = (type, str) => {\n    if (!CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (typeof str !== 'string')\n        throw new TypeError('stringToBytes() expects string');\n    return CODERS[type].decode(str);\n};\nexport const bytes = stringToBytes;\n","import { bytes } from \"../utils\";\nimport { base58 } from '@scure/base';\nexport var CurveType;\n(function (CurveType) {\n    CurveType[CurveType[\"ED25519\"] = 0] = \"ED25519\";\n    CurveType[CurveType[\"SECP256K1\"] = 1] = \"SECP256K1\";\n})(CurveType || (CurveType = {}));\nfunction data_len(c) {\n    switch (c) {\n        case CurveType.ED25519:\n            return 32;\n        case CurveType.SECP256K1:\n            return 64;\n        default:\n            throw new UnknownCurve();\n    }\n}\nfunction split_key_type_data(value) {\n    let idx = value.indexOf(\":\");\n    if (idx >= 0) {\n        return [curveTypeFromStr(value.substring(0, idx)), value.substring(idx + 1)];\n    }\n    else {\n        return [CurveType.ED25519, value];\n    }\n}\nexport function curveTypeFromStr(value) {\n    switch (value) {\n        case \"ed25519\":\n            return CurveType.ED25519;\n        case \"secp256k1\":\n            return CurveType.SECP256K1;\n        default:\n            throw new UnknownCurve();\n    }\n}\nexport class ParsePublicKeyError extends Error {\n}\nexport class InvalidLengthError extends ParsePublicKeyError {\n    constructor(length) {\n        super(`Invalid length: ${length}`);\n        this.length = length;\n    }\n}\nexport class Base58Error extends ParsePublicKeyError {\n    constructor(error) {\n        super(`Base58 error: ${error}`);\n        this.error = error;\n    }\n}\nexport class UnknownCurve extends ParsePublicKeyError {\n    constructor() {\n        super(\"Unknown curve\");\n    }\n}\nexport class PublicKey {\n    constructor(data) {\n        this.data = data;\n        let curve_type = data.charCodeAt(0);\n        let curve_len = data_len(curve_type);\n        if (data.length != curve_len + 1) {\n            throw new InvalidLengthError(data.length);\n        }\n        this.data = data;\n    }\n    curveType() {\n        return this.data.charCodeAt(0);\n    }\n    static fromString(s) {\n        let [curve, key_data] = split_key_type_data(s);\n        let data;\n        try {\n            data = bytes(base58.decode(key_data));\n        }\n        catch (err) {\n            throw new Base58Error(err.message);\n        }\n        return new PublicKey(String.fromCharCode(curve) + data);\n    }\n}\n","import { PromiseResult } from \"./types\";\nconst U64_MAX = 2n ** 64n - 1n;\nconst EVICTED_REGISTER = U64_MAX - 1n;\nexport function log(...params) {\n    env.log(`${params\n        .map(x => x === undefined ? 'undefined' : x) // Stringify undefined\n        .map(x => typeof (x) === 'object' ? JSON.stringify(x) : x) // Convert Objects to strings\n        .join(' ')}` // Convert to string\n    );\n}\nexport function signerAccountId() {\n    env.signer_account_id(0);\n    return env.read_register(0);\n}\nexport function signerAccountPk() {\n    env.signer_account_pk(0);\n    return env.read_register(0);\n}\nexport function predecessorAccountId() {\n    env.predecessor_account_id(0);\n    return env.read_register(0);\n}\nexport function blockIndex() {\n    return env.block_index();\n}\nexport function blockHeight() {\n    return blockIndex();\n}\nexport function blockTimestamp() {\n    return env.block_timestamp();\n}\nexport function epochHeight() {\n    return env.epoch_height();\n}\nexport function attachedDeposit() {\n    return env.attached_deposit();\n}\nexport function prepaidGas() {\n    return env.prepaid_gas();\n}\nexport function usedGas() {\n    return env.used_gas();\n}\nexport function randomSeed() {\n    env.random_seed(0);\n    return env.read_register(0);\n}\nexport function sha256(value) {\n    env.sha256(value, 0);\n    return env.read_register(0);\n}\nexport function keccak256(value) {\n    env.keccak256(value, 0);\n    return env.read_register(0);\n}\nexport function keccak512(value) {\n    env.keccak512(value, 0);\n    return env.read_register(0);\n}\nexport function ripemd160(value) {\n    env.ripemd160(value, 0);\n    return env.read_register(0);\n}\nexport function ecrecover(hash, sig, v, malleabilityFlag) {\n    let ret = env.ecrecover(hash, sig, v, malleabilityFlag, 0);\n    if (ret === 0n) {\n        return null;\n    }\n    return env.read_register(0);\n}\n// NOTE: \"env.panic(msg)\" is not exported, use \"throw Error(msg)\" instead\nexport function panicUtf8(msg) {\n    env.panic_utf8(msg);\n}\nexport function logUtf8(msg) {\n    env.log_utf8(msg);\n}\nexport function logUtf16(msg) {\n    env.log_utf16(msg);\n}\nexport function storageRead(key) {\n    let ret = env.storage_read(key, 0);\n    if (ret === 1n) {\n        return env.read_register(0);\n    }\n    else {\n        return null;\n    }\n}\nexport function storageHasKey(key) {\n    let ret = env.storage_has_key(key);\n    if (ret === 1n) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nexport function validatorStake(accountId) {\n    return env.validator_stake(accountId);\n}\nexport function validatorTotalStake() {\n    return env.validator_total_stake();\n}\nexport function altBn128G1Multiexp(value) {\n    env.alt_bn128_g1_multiexp(value, 0);\n    return env.read_register(0);\n}\nexport function altBn128G1Sum(value) {\n    env.alt_bn128_g1_sum(value, 0);\n    return env.read_register(0);\n}\nexport function altBn128PairingCheck(value) {\n    let ret = env.alt_bn128_pairing_check(value);\n    if (ret === 1n) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nexport function storageGetEvicted() {\n    return env.read_register(EVICTED_REGISTER);\n}\nexport function currentAccountId() {\n    env.current_account_id(0);\n    return env.read_register(0);\n}\nexport function input() {\n    env.input(0);\n    return env.read_register(0);\n}\nexport function storageUsage() {\n    return env.storage_usage();\n}\nexport function accountBalance() {\n    return env.account_balance();\n}\nexport function accountLockedBalance() {\n    return env.account_locked_balance();\n}\nexport function valueReturn(value) {\n    env.value_return(value);\n}\nexport function promiseCreate(accountId, methodName, args, amount, gas) {\n    return env.promise_create(accountId, methodName, args, amount, gas);\n}\nexport function promiseThen(promiseIndex, accountId, methodName, args, amount, gas) {\n    return env.promise_then(promiseIndex, accountId, methodName, args, amount, gas);\n}\nexport function promiseAnd(...promiseIndex) {\n    return env.promise_and(...promiseIndex);\n}\nexport function promiseBatchCreate(accountId) {\n    return env.promise_batch_create(accountId);\n}\nexport function promiseBatchThen(promiseIndex, accountId) {\n    return env.promise_batch_then(promiseIndex, accountId);\n}\nexport function promiseBatchActionCreateAccount(promiseIndex) {\n    env.promise_batch_action_create_account(promiseIndex);\n}\nexport function promiseBatchActionDeployContract(promiseIndex, code) {\n    env.promise_batch_action_deploy_contract(promiseIndex, code);\n}\nexport function promiseBatchActionFunctionCall(promiseIndex, methodName, args, amount, gas) {\n    env.promise_batch_action_function_call(promiseIndex, methodName, args, amount, gas);\n}\nexport function promiseBatchActionTransfer(promiseIndex, amount) {\n    env.promise_batch_action_transfer(promiseIndex, amount);\n}\nexport function promiseBatchActionStake(promiseIndex, amount, publicKey) {\n    env.promise_batch_action_stake(promiseIndex, amount, publicKey);\n}\nexport function promiseBatchActionAddKeyWithFullAccess(promiseIndex, publicKey, nonce) {\n    env.promise_batch_action_add_key_with_full_access(promiseIndex, publicKey, nonce);\n}\nexport function promiseBatchActionAddKeyWithFunctionCall(promiseIndex, publicKey, nonce, allowance, receiverId, methodNames) {\n    env.promise_batch_action_add_key_with_function_call(promiseIndex, publicKey, nonce, allowance, receiverId, methodNames);\n}\nexport function promiseBatchActionDeleteKey(promiseIndex, publicKey) {\n    env.promise_batch_action_delete_key(promiseIndex, publicKey);\n}\nexport function promiseBatchActionDeleteAccount(promiseIndex, beneficiaryId) {\n    env.promise_batch_action_delete_account(promiseIndex, beneficiaryId);\n}\nexport function promiseBatchActionFunctionCallWeight(promiseIndex, methodName, args, amount, gas, weight) {\n    env.promise_batch_action_function_call_weight(promiseIndex, methodName, args, amount, gas, weight);\n}\nexport function promiseResultsCount() {\n    return env.promise_results_count();\n}\nexport function promiseResult(resultIdx) {\n    let status = env.promise_result(resultIdx, 0);\n    if (status == PromiseResult.Successful) {\n        return env.read_register(0);\n    }\n    else {\n        throw Error(`Promise result ${status == PromiseResult.Failed ? \"Failed\" :\n            status == PromiseResult.NotReady ? \"NotReady\" : status}`);\n    }\n}\nexport function promiseReturn(promiseIdx) {\n    env.promise_return(promiseIdx);\n}\nexport function storageWrite(key, value) {\n    let exist = env.storage_write(key, value, EVICTED_REGISTER);\n    if (exist === 1n) {\n        return true;\n    }\n    return false;\n}\nexport function storageRemove(key) {\n    let exist = env.storage_remove(key, EVICTED_REGISTER);\n    if (exist === 1n) {\n        return true;\n    }\n    return false;\n}\nexport function storageByteCost() {\n    return 10000000000000000000n;\n}\n","import * as near from \"./api\";\nexport function initialize({}) {\n    return function (target, key, descriptor) {\n    };\n}\nexport function call({ privateFunction = false, payableFunction = false }) {\n    return function (target, key, descriptor) {\n        const originalMethod = descriptor.value;\n        descriptor.value = function (...args) {\n            if (privateFunction && near.predecessorAccountId() !== near.currentAccountId()) {\n                throw Error(\"Function is private\");\n            }\n            if (!payableFunction && near.attachedDeposit() > BigInt(0)) {\n                throw Error(\"Function is not payable\");\n            }\n            return originalMethod.apply(this, args);\n        };\n    };\n}\nexport function view({}) {\n    return function (target, key, descriptor) {\n    };\n}\nexport function NearBindgen({ requireInit = false }) {\n    return (target) => {\n        return class extends target {\n            static _create() {\n                return new target();\n            }\n            static _getState() {\n                const rawState = near.storageRead(\"STATE\");\n                return rawState ? this._deserialize(rawState) : null;\n            }\n            static _saveToStorage(obj) {\n                near.storageWrite(\"STATE\", this._serialize(obj));\n            }\n            static _getArgs() {\n                return JSON.parse(near.input() || \"{}\");\n            }\n            static _serialize(value) {\n                return JSON.stringify(value);\n            }\n            static _deserialize(value) {\n                return JSON.parse(value);\n            }\n            static _reconstruct(classObject, plainObject) {\n                for (const item in classObject) {\n                    if (classObject[item].constructor?.deserialize !== undefined) {\n                        classObject[item] = classObject[item].constructor.deserialize(plainObject[item]);\n                    }\n                    else {\n                        classObject[item] = plainObject[item];\n                    }\n                }\n                return classObject;\n            }\n            static _requireInit() {\n                return requireInit;\n            }\n        };\n    };\n}\n","import * as near from '../api';\nexport class LookupMap {\n    constructor(keyPrefix) {\n        this.keyPrefix = keyPrefix;\n    }\n    containsKey(key) {\n        let storageKey = this.keyPrefix + JSON.stringify(key);\n        return near.storageHasKey(storageKey);\n    }\n    get(key) {\n        let storageKey = this.keyPrefix + JSON.stringify(key);\n        let raw = near.storageRead(storageKey);\n        if (raw !== null) {\n            return JSON.parse(raw);\n        }\n        return null;\n    }\n    remove(key) {\n        let storageKey = this.keyPrefix + JSON.stringify(key);\n        if (near.storageRemove(storageKey)) {\n            return JSON.parse(near.storageGetEvicted());\n        }\n        return null;\n    }\n    set(key, value) {\n        let storageKey = this.keyPrefix + JSON.stringify(key);\n        let storageValue = JSON.stringify(value);\n        if (near.storageWrite(storageKey, storageValue)) {\n            return JSON.parse(near.storageGetEvicted());\n        }\n        return null;\n    }\n    extend(objects) {\n        for (let kv of objects) {\n            this.set(kv[0], kv[1]);\n        }\n    }\n    serialize() {\n        return JSON.stringify(this);\n    }\n    // converting plain object to class object\n    static deserialize(data) {\n        return new LookupMap(data.keyPrefix);\n    }\n}\n","import * as near from \"../api\";\nimport { u8ArrayToBytes } from \"../utils\";\nconst ERR_INDEX_OUT_OF_BOUNDS = \"Index out of bounds\";\nconst ERR_INCONSISTENT_STATE = \"The collection is an inconsistent state. Did previous smart contract execution terminate unexpectedly?\";\nfunction indexToKey(prefix, index) {\n    let data = new Uint32Array([index]);\n    let array = new Uint8Array(data.buffer);\n    let key = u8ArrayToBytes(array);\n    return prefix + key;\n}\n/// An iterable implementation of vector that stores its content on the trie.\n/// Uses the following map: index -> element\nexport class Vector {\n    constructor(prefix) {\n        this.length = 0;\n        this.prefix = prefix;\n    }\n    isEmpty() {\n        return this.length == 0;\n    }\n    get(index) {\n        if (index >= this.length) {\n            return null;\n        }\n        let storageKey = indexToKey(this.prefix, index);\n        return JSON.parse(near.storageRead(storageKey));\n    }\n    /// Removes an element from the vector and returns it in serialized form.\n    /// The removed element is replaced by the last element of the vector.\n    /// Does not preserve ordering, but is `O(1)`.\n    swapRemove(index) {\n        if (index >= this.length) {\n            throw new Error(ERR_INDEX_OUT_OF_BOUNDS);\n        }\n        else if (index + 1 == this.length) {\n            return this.pop();\n        }\n        else {\n            let key = indexToKey(this.prefix, index);\n            let last = this.pop();\n            if (near.storageWrite(key, JSON.stringify(last))) {\n                return JSON.parse(near.storageGetEvicted());\n            }\n            else {\n                throw new Error(ERR_INCONSISTENT_STATE);\n            }\n        }\n    }\n    push(element) {\n        let key = indexToKey(this.prefix, this.length);\n        this.length += 1;\n        near.storageWrite(key, JSON.stringify(element));\n    }\n    pop() {\n        if (this.isEmpty()) {\n            return null;\n        }\n        else {\n            let lastIndex = this.length - 1;\n            let lastKey = indexToKey(this.prefix, lastIndex);\n            this.length -= 1;\n            if (near.storageRemove(lastKey)) {\n                return JSON.parse(near.storageGetEvicted());\n            }\n            else {\n                throw new Error(ERR_INCONSISTENT_STATE);\n            }\n        }\n    }\n    replace(index, element) {\n        if (index >= this.length) {\n            throw new Error(ERR_INDEX_OUT_OF_BOUNDS);\n        }\n        else {\n            let key = indexToKey(this.prefix, index);\n            if (near.storageWrite(key, JSON.stringify(element))) {\n                return JSON.parse(near.storageGetEvicted());\n            }\n            else {\n                throw new Error(ERR_INCONSISTENT_STATE);\n            }\n        }\n    }\n    extend(elements) {\n        for (let element of elements) {\n            this.push(element);\n        }\n    }\n    [Symbol.iterator]() {\n        return new VectorIterator(this);\n    }\n    clear() {\n        for (let i = 0; i < this.length; i++) {\n            let key = indexToKey(this.prefix, i);\n            near.storageRemove(key);\n        }\n        this.length = 0;\n    }\n    toArray() {\n        let ret = [];\n        for (let v of this) {\n            ret.push(v);\n        }\n        return ret;\n    }\n    serialize() {\n        return JSON.stringify(this);\n    }\n    // converting plain object to class object\n    static deserialize(data) {\n        let vector = new Vector(data.prefix);\n        vector.length = data.length;\n        return vector;\n    }\n}\nexport class VectorIterator {\n    constructor(vector) {\n        this.current = 0;\n        this.vector = vector;\n    }\n    next() {\n        if (this.current < this.vector.length) {\n            let value = this.vector.get(this.current);\n            this.current += 1;\n            return { value, done: false };\n        }\n        return { value: null, done: true };\n    }\n}\n","import * as near from \"../api\";\nimport { u8ArrayToBytes, bytesToU8Array } from \"../utils\";\nimport { Vector } from \"./vector\";\nconst ERR_INCONSISTENT_STATE = \"The collection is an inconsistent state. Did previous smart contract execution terminate unexpectedly?\";\nfunction serializeIndex(index) {\n    let data = new Uint32Array([index]);\n    let array = new Uint8Array(data.buffer);\n    return u8ArrayToBytes(array);\n}\nfunction deserializeIndex(rawIndex) {\n    let array = bytesToU8Array(rawIndex);\n    let data = new Uint32Array(array.buffer);\n    return data[0];\n}\nexport class UnorderedSet {\n    constructor(prefix) {\n        this.prefix = prefix;\n        this.elementIndexPrefix = prefix + \"i\";\n        let elementsPrefix = prefix + \"e\";\n        this.elements = new Vector(elementsPrefix);\n    }\n    get length() {\n        return this.elements.length;\n    }\n    isEmpty() {\n        return this.elements.isEmpty();\n    }\n    contains(element) {\n        let indexLookup = this.elementIndexPrefix + JSON.stringify(element);\n        return near.storageHasKey(indexLookup);\n    }\n    set(element) {\n        let indexLookup = this.elementIndexPrefix + JSON.stringify(element);\n        if (near.storageRead(indexLookup)) {\n            return false;\n        }\n        else {\n            let nextIndex = this.length;\n            let nextIndexRaw = serializeIndex(nextIndex);\n            near.storageWrite(indexLookup, nextIndexRaw);\n            this.elements.push(element);\n            return true;\n        }\n    }\n    remove(element) {\n        let indexLookup = this.elementIndexPrefix + JSON.stringify(element);\n        let indexRaw = near.storageRead(indexLookup);\n        if (indexRaw) {\n            if (this.length == 1) {\n                // If there is only one element then swap remove simply removes it without\n                // swapping with the last element.\n                near.storageRemove(indexLookup);\n            }\n            else {\n                // If there is more than one element then swap remove swaps it with the last\n                // element.\n                let lastElement = this.elements.get(this.length - 1);\n                if (!lastElement) {\n                    throw new Error(ERR_INCONSISTENT_STATE);\n                }\n                near.storageRemove(indexLookup);\n                // If the removed element was the last element from keys, then we don't need to\n                // reinsert the lookup back.\n                if (lastElement != element) {\n                    let lastLookupElement = this.elementIndexPrefix + JSON.stringify(lastElement);\n                    near.storageWrite(lastLookupElement, indexRaw);\n                }\n            }\n            let index = deserializeIndex(indexRaw);\n            this.elements.swapRemove(index);\n            return true;\n        }\n        return false;\n    }\n    clear() {\n        for (let element of this.elements) {\n            let indexLookup = this.elementIndexPrefix + JSON.stringify(element);\n            near.storageRemove(indexLookup);\n        }\n        this.elements.clear();\n    }\n    toArray() {\n        let ret = [];\n        for (let v of this) {\n            ret.push(v);\n        }\n        return ret;\n    }\n    [Symbol.iterator]() {\n        return this.elements[Symbol.iterator]();\n    }\n    extend(elements) {\n        for (let element of elements) {\n            this.set(element);\n        }\n    }\n    serialize() {\n        return JSON.stringify(this);\n    }\n    // converting plain object to class object\n    static deserialize(data) {\n        let set = new UnorderedSet(data.prefix);\n        // reconstruct Vector\n        let elementsPrefix = data.prefix + \"e\";\n        set.elements = new Vector(elementsPrefix);\n        set.elements.length = data.elements.length;\n        return set;\n    }\n}\n","export enum Position {\n  None,\n  Bearish,\n  Bullish,\n}\n\nexport class BetInfo {\n  position: Position;\n  amount: bigint;\n  claimed: boolean;\n\n  constructor(position: Position, amount: bigint, claimed: boolean) {\n    this.position = position;\n    this.amount = amount;\n    this.claimed = claimed;\n  }\n}\n","export class Round {\n  epoch: bigint;\n  startTimestamp: bigint;\n  lockTimestamp: bigint;\n  closeTimestamp: bigint;\n  lockPrice: bigint;\n  closePrice: bigint;\n  totalAmount: bigint;\n  bullAmount: bigint;\n  bearAmount: bigint;\n  rewardBaseCalAmount: bigint;\n  rewardAmount: bigint;\n  oracleCalled: boolean;\n\n  constructor(\n    epoch,\n    startTimestamp,\n    lockTimestamp,\n    closeTimestamp,\n    lockPrice,\n    closePrice,\n    totalAmount,\n    bullAmount,\n    bearAmount,\n    rewardBaseCalAmount,\n    rewardAmount,\n    oracleCalled\n  ) {\n    this.epoch = epoch;\n    this.startTimestamp = startTimestamp;\n    this.lockTimestamp = lockTimestamp;\n    this.closeTimestamp = closeTimestamp;\n    this.lockPrice = lockPrice;\n    this.closePrice = closePrice;\n    this.totalAmount = totalAmount;\n    this.bullAmount = bullAmount;\n    this.bearAmount = bearAmount;\n    this.rewardBaseCalAmount = rewardBaseCalAmount;\n    this.rewardAmount = rewardAmount;\n    this.oracleCalled = oracleCalled;\n  }\n}\n","import {\n  NearBindgen,\n  near,\n  call,\n  view,\n  initialize,\n  assert,\n  LookupMap,\n  UnorderedSet,\n} from \"near-sdk-js\";\nimport { BetInfo, Position } from \"./BetInfo\";\nimport { Round } from \"./Round\";\n\n@NearBindgen({})\nclass PredictionMarket {\n  genesisLockOnce: boolean;\n  genesisStartOnce: boolean;\n\n  owner: string = \"admin.idk.near\";\n  pendingOwner: string = \"\";\n  manager: string = \"manager.idk.near\";\n\n  oracle: string = \"oracleprice.near\";\n  assetId: string = \"wrap.near\";\n\n  minBid: bigint = BigInt(1000);\n  duration: bigint = BigInt(1800);\n\n  feeRate: bigint = BigInt(10);\n  feePrecision: bigint = BigInt(1000);\n  feeTreasury: bigint = BigInt(0);\n\n  currentEpoch: number = 0;\n\n  bids: LookupMap = new LookupMap(\"b\");\n  rounds: LookupMap = new LookupMap(\"r\");\n  userRounds: LookupMap = new LookupMap(\"u\");\n\n  @initialize({})\n  init({ owner, manager }: { owner: string; manager: string }) {\n    this.owner = owner;\n    this.manager = manager;\n  }\n\n  // PUBLIC\n\n  @call({ payableFunction: true })\n  bet({ epoch, position }: { epoch: number; position: Position }): void {\n    assert(epoch == this.currentEpoch, \"Wrong epoch\");\n    // check bettable round\n    assert((near.attachedDeposit() as bigint) >= this.minBid, \"Bid is too low\");\n    // check bid only once per round\n\n    const amount: bigint = near.attachedDeposit();\n    let round = this._getRound(epoch);\n    round.totalAmount += amount;\n    if (position == Position.Bearish) {\n      round.bearAmount += amount;\n    } else {\n      round.bullAmount += amount;\n    }\n\n    const sender = near.predecessorAccountId();\n    const userRounds = this._getUserRounds(sender);\n    let betInfo = this._getBetInfo(epoch, sender);\n    betInfo.position = position;\n    betInfo.amount = amount;\n    userRounds.set(epoch);\n\n    this._setBetInfo(epoch, sender, betInfo);\n    this._setUserRounds(sender, userRounds);\n\n    near.log(`${sender} bids in the ${epoch} epoch. Amount is ${amount}`);\n  }\n\n  // ORACLE\n\n  @call({})\n  reveal({}: {}): void {\n    assert(\n      this.genesisLockOnce && this.genesisStartOnce,\n      \"Genesis rounds aren't finished\"\n    );\n\n    let price = this._getPrice();\n    this._safeLockRound(this.currentEpoch, price);\n    this._safeEndRound(this.currentEpoch - 1, price);\n    this._calculateRewards(this.currentEpoch - 1);\n\n    this.currentEpoch += 1;\n    this._safeStartRound(this.currentEpoch);\n  }\n\n  // ADMIN\n\n  @call({})\n  setMinBid({ minBid }: { minBid: bigint }): void {\n    this._assertOwner();\n    this.minBid = minBid;\n  }\n\n  @call({})\n  setDuration({ duration }: { duration: bigint }): void {\n    this._assertOwner();\n    this.duration = duration;\n  }\n\n  @call({})\n  setFeeRate({ feeRate }: { feeRate: bigint }): void {\n    this._assertOwner();\n    this.feeRate = feeRate;\n  }\n\n  @call({})\n  claimFee({ receiver }: { receiver: string }): void {\n    this._assertOwner();\n    const promise = near.promiseBatchCreate(receiver);\n    near.promiseBatchActionTransfer(promise, this.feeTreasury);\n    this.feeTreasury = BigInt(0);\n  }\n\n  @call({})\n  transferOwnership({ pendingOwner }: { pendingOwner: string }): void {\n    this._assertOwner();\n    this.pendingOwner = pendingOwner;\n  }\n\n  @call({})\n  confirmTransferOwnership({}: {}): void {\n    this._assertPendingOwner();\n    this.owner = this.pendingOwner;\n    this.pendingOwner = \"\";\n  }\n\n  // INTERNAL\n\n  _calculateRewards(epoch: number): void {\n    let round = this._getRound(epoch);\n\n    assert(\n      round.rewardBaseCalAmount == BigInt(0) && round.rewardAmount == BigInt(0),\n      \"Reward calculated\"\n    );\n\n    let treasuryAmt;\n    if (round.closePrice > round.lockPrice) {\n      round.rewardBaseCalAmount = round.bullAmount;\n      treasuryAmt = (round.totalAmount * this.feeRate) / this.feePrecision;\n      round.rewardAmount = round.totalAmount - treasuryAmt;\n    } else if (round.closePrice < round.lockPrice) {\n      round.rewardBaseCalAmount = round.bearAmount;\n      treasuryAmt = (round.totalAmount * this.feeRate) / this.feePrecision;\n      round.rewardAmount = round.totalAmount - treasuryAmt;\n    } else {\n      round.rewardBaseCalAmount = BigInt(0);\n      round.rewardAmount = BigInt(0);\n      treasuryAmt = round.totalAmount;\n    }\n\n    this.feeTreasury += treasuryAmt;\n    this._setRound(epoch, round);\n\n    near.log(`Rewards for ${epoch} round calculated`);\n  }\n\n  _safeEndRound(epoch: number, price: bigint): void {\n    let round = this._getRound(epoch);\n\n    assert(round.startTimestamp != BigInt(0), \"Round n-1 is not started\");\n    assert(round.lockTimestamp < near.blockTimestamp(), \"Lock is too early\");\n\n    round.closeTimestamp = near.blockTimestamp() + this.duration;\n    round.lockPrice = price;\n\n    this._setRound(epoch, round);\n\n    near.log(`The round ${epoch} locked`);\n  }\n\n  _safeLockRound(epoch: number, price: bigint): void {\n    let round = this._getRound(epoch);\n\n    assert(round.lockTimestamp != BigInt(0), \"Round n-1 is not started\");\n    assert(round.closeTimestamp < near.blockTimestamp(), \"End is too early\");\n\n    round.closePrice = price;\n\n    this._setRound(epoch, round);\n\n    near.log(`The round ${epoch} closed`);\n  }\n\n  _safeStartRound(epoch: number): void {\n    let oldRound = this._getRound(epoch - 2);\n\n    assert(this.genesisStartOnce, \"Init game first\");\n    assert(oldRound.closeTimestamp != BigInt(0), \"Round n-2 is not ended\");\n    assert(\n      oldRound.closeTimestamp < near.blockTimestamp(),\n      \"Round n-2 is too young\"\n    );\n\n    this._startRound(epoch);\n  }\n\n  _startRound(epoch: number): void {\n    let round = new Round(\n      epoch,\n      near.blockTimestamp(),\n      near.blockTimestamp() + this.duration,\n      near.blockTimestamp() + BigInt(2) * this.duration,\n      BigInt(0),\n      BigInt(0),\n      BigInt(0),\n      BigInt(0),\n      BigInt(0),\n      BigInt(0),\n      BigInt(0),\n      false\n    );\n    this._setRound(epoch, round);\n    near.log(`The roumd ${epoch} started`);\n  }\n\n  // HELPERS\n  _assertOwner(): void {\n    assert(near.predecessorAccountId() == this.owner, \"Not an owner\");\n  }\n\n  _assertPendingOwner(): void {\n    assert(near.predecessorAccountId() == this.pendingOwner, \"Not an owner\");\n  }\n\n  _getBetInfo(epoch: number, owner: string): BetInfo {\n    let betInfo: any = this.rounds.get(epoch.toString() + owner);\n    if (betInfo === null) {\n      return new BetInfo(Position.None, BigInt(0), false);\n    }\n    return new BetInfo(betInfo.position, betInfo.amount, betInfo.claimed);\n  }\n\n  _getUserRounds(owner: string): UnorderedSet {\n    let userRounds = this.userRounds.get(owner);\n    if (userRounds === null) {\n      return new UnorderedSet(owner);\n    }\n    return userRounds as UnorderedSet;\n  }\n\n  _getRound(epoch: number): Round {\n    let round: any = this.rounds.get(epoch.toString());\n    assert(round != null, \"Round doesn't exist\");\n    return new Round(\n      round.epoch,\n      round.startTimestamp,\n      round.lockTimestamp,\n      round.closeTimestamp,\n      round.lockPrice,\n      round.closePrice,\n      round.totalAmount,\n      round.bullAmount,\n      round.bearAmount,\n      round.rewardBaseCalAmount,\n      round.rewardAmount,\n      round.oracleCalled\n    );\n  }\n\n  _getPrice(): bigint {\n    // TODO\n    return BigInt(4.22);\n  }\n\n  _setBetInfo(epoch: number, owner: string, betInfo: BetInfo): void {\n    this.rounds.set(epoch.toString() + owner, betInfo);\n  }\n\n  _setRound(epoch: number, roumd: Round): void {\n    this.rounds.set(epoch.toString(), roumd);\n  }\n\n  _setUserRounds(owner: string, userRounds: UnorderedSet): void {\n    this.userRounds.set(owner, userRounds);\n  }\n}\n"],"names":["PromiseResult","PromiseError","u8ArrayToBytes","array","ret","e","String","fromCharCode","bytesToU8Array","bytes","Uint8Array","length","i","charCodeAt","assert","b","str","Error","assertNumber","n","Number","isSafeInteger","chain","args","wrap","a","c","encode","Array","from","reverse","reduce","acc","undefined","decode","alphabet","digits","isArray","map","input","letter","index","indexOf","join","separator","to","split","padding","bits","chr","data","push","end","slice","normalize","fn","convertRadix","pos","res","forEach","d","carry","done","digit","digitBase","Math","floor","gcd","radix2carry","convertRadix2","mask","radix","num","radix2","revPadding","unsafeWrapper","apply","base16","base32","s","toUpperCase","replace","base64","base64url","genBase58","abc","base58","XMR_BLOCK_LEN","base58xmr","block","subarray","padStart","blockLen","j","concat","BECH_ALPHABET","POLYMOD_GENERATORS","bech32Polymod","pre","chk","bechChecksum","prefix","words","encodingConst","len","v","genBech32","encoding","ENCODING_CONST","_words","fromWords","toWords","fromWordsUnsafe","limit","actualLength","TypeError","toLowerCase","lowered","sepIndex","lastIndexOf","sum","endsWith","decodeUnsafe","decodeToBytes","utf8","TextDecoder","TextEncoder","hex","CODERS","Object","keys","CurveType","U64_MAX","EVICTED_REGISTER","log","params","env","x","JSON","stringify","predecessorAccountId","predecessor_account_id","read_register","blockTimestamp","block_timestamp","attachedDeposit","attached_deposit","storageRead","key","storage_read","storageHasKey","storage_has_key","storageGetEvicted","currentAccountId","current_account_id","promiseBatchCreate","accountId","promise_batch_create","promiseBatchActionTransfer","promiseIndex","amount","promise_batch_action_transfer","storageWrite","value","exist","storage_write","storageRemove","storage_remove","initialize","target","descriptor","call","privateFunction","payableFunction","originalMethod","near","BigInt","NearBindgen","requireInit","_create","_getState","rawState","_deserialize","_saveToStorage","obj","_serialize","_getArgs","parse","_reconstruct","classObject","plainObject","item","constructor","deserialize","_requireInit","LookupMap","keyPrefix","containsKey","storageKey","get","raw","remove","set","storageValue","extend","objects","kv","serialize","ERR_INDEX_OUT_OF_BOUNDS","ERR_INCONSISTENT_STATE","indexToKey","Uint32Array","buffer","Vector","isEmpty","swapRemove","pop","last","element","lastIndex","lastKey","elements","Symbol","iterator","VectorIterator","clear","toArray","vector","current","next","serializeIndex","deserializeIndex","rawIndex","UnorderedSet","elementIndexPrefix","elementsPrefix","contains","indexLookup","nextIndex","nextIndexRaw","indexRaw","lastElement","lastLookupElement","Position","BetInfo","position","claimed","Round","epoch","startTimestamp","lockTimestamp","closeTimestamp","lockPrice","closePrice","totalAmount","bullAmount","bearAmount","rewardBaseCalAmount","rewardAmount","oracleCalled","PredictionMarket","owner","pendingOwner","manager","oracle","assetId","minBid","duration","feeRate","feePrecision","feeTreasury","currentEpoch","bids","rounds","userRounds","init","bet","round","_getRound","Bearish","sender","_getUserRounds","betInfo","_getBetInfo","_setBetInfo","_setUserRounds","reveal","genesisLockOnce","genesisStartOnce","price","_getPrice","_safeLockRound","_safeEndRound","_calculateRewards","_safeStartRound","setMinBid","_assertOwner","setDuration","setFeeRate","claimFee","receiver","promise","transferOwnership","confirmTransferOwnership","_assertPendingOwner","treasuryAmt","_setRound","oldRound","_startRound","toString","None","roumd"],"mappings":"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"}