{"version":3,"file":"prediction_market.js","sources":["../node_modules/near-sdk-js/lib/types/vm_types.js","../node_modules/near-sdk-js/lib/utils.js","../node_modules/@scure/base/lib/esm/index.js","../node_modules/near-sdk-js/lib/types/public_key.js","../node_modules/near-sdk-js/lib/api.js","../node_modules/near-sdk-js/lib/near-bindgen.js","../node_modules/near-sdk-js/lib/collections/lookup-map.js","../node_modules/near-sdk-js/lib/promise.js","../src/BetInfo.ts","../src/Round.ts","../src/PredictionMarket.ts"],"sourcesContent":["export var PromiseResult;\n(function (PromiseResult) {\n    PromiseResult[PromiseResult[\"NotReady\"] = 0] = \"NotReady\";\n    PromiseResult[PromiseResult[\"Successful\"] = 1] = \"Successful\";\n    PromiseResult[PromiseResult[\"Failed\"] = 2] = \"Failed\";\n})(PromiseResult || (PromiseResult = {}));\nexport var PromiseError;\n(function (PromiseError) {\n    PromiseError[PromiseError[\"Failed\"] = 0] = \"Failed\";\n    PromiseError[PromiseError[\"NotReady\"] = 1] = \"NotReady\";\n})(PromiseError || (PromiseError = {}));\n","export function u8ArrayToBytes(array) {\n    let ret = \"\";\n    for (let e of array) {\n        ret += String.fromCharCode(e);\n    }\n    return ret;\n}\n// TODO this function is a bit broken and the type can't be string\n// TODO for more info: https://github.com/near/near-sdk-js/issues/78\nexport function bytesToU8Array(bytes) {\n    let ret = new Uint8Array(bytes.length);\n    for (let i = 0; i < bytes.length; i++) {\n        ret[i] = bytes.charCodeAt(i);\n    }\n    return ret;\n}\nexport function bytes(strOrU8Array) {\n    if (typeof strOrU8Array == \"string\") {\n        return checkStringIsBytes(strOrU8Array);\n    }\n    else if (strOrU8Array instanceof Uint8Array) {\n        return u8ArrayToBytes(strOrU8Array);\n    }\n    throw new Error(\"bytes: expected string or Uint8Array\");\n}\nfunction checkStringIsBytes(str) {\n    for (let i = 0; i < str.length; i++) {\n        if (str.charCodeAt(i) > 255) {\n            throw new Error(`string ${str} at index ${i}: ${str[i]} is not a valid byte`);\n        }\n    }\n    return str;\n}\nexport function assert(b, str) {\n    if (b) {\n        return;\n    }\n    else {\n        throw Error(\"assertion failed: \" + str);\n    }\n}\n","/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nexport function assertNumber(n) {\n    if (!Number.isSafeInteger(n))\n        throw new Error(`Wrong integer: ${n}`);\n}\nfunction chain(...args) {\n    const wrap = (a, b) => (c) => a(b(c));\n    const encode = Array.from(args)\n        .reverse()\n        .reduce((acc, i) => (acc ? wrap(acc, i.encode) : i.encode), undefined);\n    const decode = args.reduce((acc, i) => (acc ? wrap(acc, i.decode) : i.decode), undefined);\n    return { encode, decode };\n}\nfunction alphabet(alphabet) {\n    return {\n        encode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('alphabet.encode input should be an array of numbers');\n            return digits.map((i) => {\n                assertNumber(i);\n                if (i < 0 || i >= alphabet.length)\n                    throw new Error(`Digit index outside alphabet: ${i} (alphabet: ${alphabet.length})`);\n                return alphabet[i];\n            });\n        },\n        decode: (input) => {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('alphabet.decode input should be array of strings');\n            return input.map((letter) => {\n                if (typeof letter !== 'string')\n                    throw new Error(`alphabet.decode: not string element=${letter}`);\n                const index = alphabet.indexOf(letter);\n                if (index === -1)\n                    throw new Error(`Unknown letter: \"${letter}\". Allowed: ${alphabet}`);\n                return index;\n            });\n        },\n    };\n}\nfunction join(separator = '') {\n    if (typeof separator !== 'string')\n        throw new Error('join separator should be string');\n    return {\n        encode: (from) => {\n            if (!Array.isArray(from) || (from.length && typeof from[0] !== 'string'))\n                throw new Error('join.encode input should be array of strings');\n            for (let i of from)\n                if (typeof i !== 'string')\n                    throw new Error(`join.encode: non-string input=${i}`);\n            return from.join(separator);\n        },\n        decode: (to) => {\n            if (typeof to !== 'string')\n                throw new Error('join.decode input should be string');\n            return to.split(separator);\n        },\n    };\n}\nfunction padding(bits, chr = '=') {\n    assertNumber(bits);\n    if (typeof chr !== 'string')\n        throw new Error('padding chr should be string');\n    return {\n        encode(data) {\n            if (!Array.isArray(data) || (data.length && typeof data[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of data)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.encode: non-string input=${i}`);\n            while ((data.length * bits) % 8)\n                data.push(chr);\n            return data;\n        },\n        decode(input) {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of input)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.decode: non-string input=${i}`);\n            let end = input.length;\n            if ((end * bits) % 8)\n                throw new Error('Invalid padding: string should have whole number of bytes');\n            for (; end > 0 && input[end - 1] === chr; end--) {\n                if (!(((end - 1) * bits) % 8))\n                    throw new Error('Invalid padding: string has too much padding');\n            }\n            return input.slice(0, end);\n        },\n    };\n}\nfunction normalize(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('normalize fn should be function');\n    return { encode: (from) => from, decode: (to) => fn(to) };\n}\nfunction convertRadix(data, from, to) {\n    if (from < 2)\n        throw new Error(`convertRadix: wrong from=${from}, base cannot be less than 2`);\n    if (to < 2)\n        throw new Error(`convertRadix: wrong to=${to}, base cannot be less than 2`);\n    if (!Array.isArray(data))\n        throw new Error('convertRadix: data should be array');\n    if (!data.length)\n        return [];\n    let pos = 0;\n    const res = [];\n    const digits = Array.from(data);\n    digits.forEach((d) => {\n        assertNumber(d);\n        if (d < 0 || d >= from)\n            throw new Error(`Wrong integer: ${d}`);\n    });\n    while (true) {\n        let carry = 0;\n        let done = true;\n        for (let i = pos; i < digits.length; i++) {\n            const digit = digits[i];\n            const digitBase = from * carry + digit;\n            if (!Number.isSafeInteger(digitBase) ||\n                (from * carry) / from !== carry ||\n                digitBase - digit !== from * carry) {\n                throw new Error('convertRadix: carry overflow');\n            }\n            carry = digitBase % to;\n            digits[i] = Math.floor(digitBase / to);\n            if (!Number.isSafeInteger(digits[i]) || digits[i] * to + carry !== digitBase)\n                throw new Error('convertRadix: carry overflow');\n            if (!done)\n                continue;\n            else if (!digits[i])\n                pos = i;\n            else\n                done = false;\n        }\n        res.push(carry);\n        if (done)\n            break;\n    }\n    for (let i = 0; i < data.length - 1 && data[i] === 0; i++)\n        res.push(0);\n    return res.reverse();\n}\nconst gcd = (a, b) => (!b ? a : gcd(b, a % b));\nconst radix2carry = (from, to) => from + (to - gcd(from, to));\nfunction convertRadix2(data, from, to, padding) {\n    if (!Array.isArray(data))\n        throw new Error('convertRadix2: data should be array');\n    if (from <= 0 || from > 32)\n        throw new Error(`convertRadix2: wrong from=${from}`);\n    if (to <= 0 || to > 32)\n        throw new Error(`convertRadix2: wrong to=${to}`);\n    if (radix2carry(from, to) > 32) {\n        throw new Error(`convertRadix2: carry overflow from=${from} to=${to} carryBits=${radix2carry(from, to)}`);\n    }\n    let carry = 0;\n    let pos = 0;\n    const mask = 2 ** to - 1;\n    const res = [];\n    for (const n of data) {\n        assertNumber(n);\n        if (n >= 2 ** from)\n            throw new Error(`convertRadix2: invalid data word=${n} from=${from}`);\n        carry = (carry << from) | n;\n        if (pos + from > 32)\n            throw new Error(`convertRadix2: carry overflow pos=${pos} from=${from}`);\n        pos += from;\n        for (; pos >= to; pos -= to)\n            res.push(((carry >> (pos - to)) & mask) >>> 0);\n        carry &= 2 ** pos - 1;\n    }\n    carry = (carry << (to - pos)) & mask;\n    if (!padding && pos >= from)\n        throw new Error('Excess padding');\n    if (!padding && carry)\n        throw new Error(`Non-zero padding: ${carry}`);\n    if (padding && pos > 0)\n        res.push(carry >>> 0);\n    return res;\n}\nfunction radix(num) {\n    assertNumber(num);\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix.encode input should be Uint8Array');\n            return convertRadix(Array.from(bytes), 2 ** 8, num);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix.decode input should be array of strings');\n            return Uint8Array.from(convertRadix(digits, num, 2 ** 8));\n        },\n    };\n}\nfunction radix2(bits, revPadding = false) {\n    assertNumber(bits);\n    if (bits <= 0 || bits > 32)\n        throw new Error('radix2: bits should be in (0..32]');\n    if (radix2carry(8, bits) > 32 || radix2carry(bits, 8) > 32)\n        throw new Error('radix2: carry overflow');\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix2.encode input should be Uint8Array');\n            return convertRadix2(Array.from(bytes), 8, bits, !revPadding);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix2.decode input should be array of strings');\n            return Uint8Array.from(convertRadix2(digits, bits, 8, revPadding));\n        },\n    };\n}\nfunction unsafeWrapper(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('unsafeWrapper fn should be function');\n    return function (...args) {\n        try {\n            return fn.apply(null, args);\n        }\n        catch (e) { }\n    };\n}\nfunction checksum(len, fn) {\n    assertNumber(len);\n    if (typeof fn !== 'function')\n        throw new Error('checksum fn should be function');\n    return {\n        encode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.encode: input should be Uint8Array');\n            const checksum = fn(data).slice(0, len);\n            const res = new Uint8Array(data.length + len);\n            res.set(data);\n            res.set(checksum, data.length);\n            return res;\n        },\n        decode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.decode: input should be Uint8Array');\n            const payload = data.slice(0, -len);\n            const newChecksum = fn(payload).slice(0, len);\n            const oldChecksum = data.slice(-len);\n            for (let i = 0; i < len; i++)\n                if (newChecksum[i] !== oldChecksum[i])\n                    throw new Error('Invalid checksum');\n            return payload;\n        },\n    };\n}\nexport const utils = { alphabet, chain, checksum, radix, radix2, join, padding };\nexport const base16 = chain(radix2(4), alphabet('0123456789ABCDEF'), join(''));\nexport const base32 = chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), padding(5), join(''));\nexport const base32hex = chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), padding(5), join(''));\nexport const base32crockford = chain(radix2(5), alphabet('0123456789ABCDEFGHJKMNPQRSTVWXYZ'), join(''), normalize((s) => s.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1')));\nexport const base64 = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), padding(6), join(''));\nexport const base64url = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), padding(6), join(''));\nconst genBase58 = (abc) => chain(radix(58), alphabet(abc), join(''));\nexport const base58 = genBase58('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz');\nexport const base58flickr = genBase58('123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ');\nexport const base58xrp = genBase58('rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz');\nconst XMR_BLOCK_LEN = [0, 2, 3, 5, 6, 7, 9, 10, 11];\nexport const base58xmr = {\n    encode(data) {\n        let res = '';\n        for (let i = 0; i < data.length; i += 8) {\n            const block = data.subarray(i, i + 8);\n            res += base58.encode(block).padStart(XMR_BLOCK_LEN[block.length], '1');\n        }\n        return res;\n    },\n    decode(str) {\n        let res = [];\n        for (let i = 0; i < str.length; i += 11) {\n            const slice = str.slice(i, i + 11);\n            const blockLen = XMR_BLOCK_LEN.indexOf(slice.length);\n            const block = base58.decode(slice);\n            for (let j = 0; j < block.length - blockLen; j++) {\n                if (block[j] !== 0)\n                    throw new Error('base58xmr: wrong padding');\n            }\n            res = res.concat(Array.from(block.slice(block.length - blockLen)));\n        }\n        return Uint8Array.from(res);\n    },\n};\nexport const base58check = (sha256) => chain(checksum(4, (data) => sha256(sha256(data))), base58);\nconst BECH_ALPHABET = chain(alphabet('qpzry9x8gf2tvdw0s3jn54khce6mua7l'), join(''));\nconst POLYMOD_GENERATORS = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\nfunction bech32Polymod(pre) {\n    const b = pre >> 25;\n    let chk = (pre & 0x1ffffff) << 5;\n    for (let i = 0; i < POLYMOD_GENERATORS.length; i++) {\n        if (((b >> i) & 1) === 1)\n            chk ^= POLYMOD_GENERATORS[i];\n    }\n    return chk;\n}\nfunction bechChecksum(prefix, words, encodingConst = 1) {\n    const len = prefix.length;\n    let chk = 1;\n    for (let i = 0; i < len; i++) {\n        const c = prefix.charCodeAt(i);\n        if (c < 33 || c > 126)\n            throw new Error(`Invalid prefix (${prefix})`);\n        chk = bech32Polymod(chk) ^ (c >> 5);\n    }\n    chk = bech32Polymod(chk);\n    for (let i = 0; i < len; i++)\n        chk = bech32Polymod(chk) ^ (prefix.charCodeAt(i) & 0x1f);\n    for (let v of words)\n        chk = bech32Polymod(chk) ^ v;\n    for (let i = 0; i < 6; i++)\n        chk = bech32Polymod(chk);\n    chk ^= encodingConst;\n    return BECH_ALPHABET.encode(convertRadix2([chk % 2 ** 30], 30, 5, false));\n}\nfunction genBech32(encoding) {\n    const ENCODING_CONST = encoding === 'bech32' ? 1 : 0x2bc830a3;\n    const _words = radix2(5);\n    const fromWords = _words.decode;\n    const toWords = _words.encode;\n    const fromWordsUnsafe = unsafeWrapper(fromWords);\n    function encode(prefix, words, limit = 90) {\n        if (typeof prefix !== 'string')\n            throw new Error(`bech32.encode prefix should be string, not ${typeof prefix}`);\n        if (!Array.isArray(words) || (words.length && typeof words[0] !== 'number'))\n            throw new Error(`bech32.encode words should be array of numbers, not ${typeof words}`);\n        const actualLength = prefix.length + 7 + words.length;\n        if (limit !== false && actualLength > limit)\n            throw new TypeError(`Length ${actualLength} exceeds limit ${limit}`);\n        prefix = prefix.toLowerCase();\n        return `${prefix}1${BECH_ALPHABET.encode(words)}${bechChecksum(prefix, words, ENCODING_CONST)}`;\n    }\n    function decode(str, limit = 90) {\n        if (typeof str !== 'string')\n            throw new Error(`bech32.decode input should be string, not ${typeof str}`);\n        if (str.length < 8 || (limit !== false && str.length > limit))\n            throw new TypeError(`Wrong string length: ${str.length} (${str}). Expected (8..${limit})`);\n        const lowered = str.toLowerCase();\n        if (str !== lowered && str !== str.toUpperCase())\n            throw new Error(`String must be lowercase or uppercase`);\n        str = lowered;\n        const sepIndex = str.lastIndexOf('1');\n        if (sepIndex === 0 || sepIndex === -1)\n            throw new Error(`Letter \"1\" must be present between prefix and data only`);\n        const prefix = str.slice(0, sepIndex);\n        const _words = str.slice(sepIndex + 1);\n        if (_words.length < 6)\n            throw new Error('Data must be at least 6 characters long');\n        const words = BECH_ALPHABET.decode(_words).slice(0, -6);\n        const sum = bechChecksum(prefix, words, ENCODING_CONST);\n        if (!_words.endsWith(sum))\n            throw new Error(`Invalid checksum in ${str}: expected \"${sum}\"`);\n        return { prefix, words };\n    }\n    const decodeUnsafe = unsafeWrapper(decode);\n    function decodeToBytes(str) {\n        const { prefix, words } = decode(str, false);\n        return { prefix, words, bytes: fromWords(words) };\n    }\n    return { encode, decode, decodeToBytes, decodeUnsafe, fromWords, fromWordsUnsafe, toWords };\n}\nexport const bech32 = genBech32('bech32');\nexport const bech32m = genBech32('bech32m');\nexport const utf8 = {\n    encode: (data) => new TextDecoder().decode(data),\n    decode: (str) => new TextEncoder().encode(str),\n};\nexport const hex = chain(radix2(4), alphabet('0123456789abcdef'), join(''), normalize((s) => {\n    if (typeof s !== 'string' || s.length % 2)\n        throw new TypeError(`hex.decode: expected string, got ${typeof s} with length ${s.length}`);\n    return s.toLowerCase();\n}));\nconst CODERS = {\n    utf8, hex, base16, base32, base64, base64url, base58, base58xmr\n};\nconst coderTypeError = `Invalid encoding type. Available types: ${Object.keys(CODERS).join(', ')}`;\nexport const bytesToString = (type, bytes) => {\n    if (typeof type !== 'string' || !CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (!(bytes instanceof Uint8Array))\n        throw new TypeError('bytesToString() expects Uint8Array');\n    return CODERS[type].encode(bytes);\n};\nexport const str = bytesToString;\nexport const stringToBytes = (type, str) => {\n    if (!CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (typeof str !== 'string')\n        throw new TypeError('stringToBytes() expects string');\n    return CODERS[type].decode(str);\n};\nexport const bytes = stringToBytes;\n","import { bytes } from \"../utils\";\nimport { base58 } from '@scure/base';\nexport var CurveType;\n(function (CurveType) {\n    CurveType[CurveType[\"ED25519\"] = 0] = \"ED25519\";\n    CurveType[CurveType[\"SECP256K1\"] = 1] = \"SECP256K1\";\n})(CurveType || (CurveType = {}));\nfunction data_len(c) {\n    switch (c) {\n        case CurveType.ED25519:\n            return 32;\n        case CurveType.SECP256K1:\n            return 64;\n        default:\n            throw new UnknownCurve();\n    }\n}\nfunction split_key_type_data(value) {\n    let idx = value.indexOf(\":\");\n    if (idx >= 0) {\n        return [curveTypeFromStr(value.substring(0, idx)), value.substring(idx + 1)];\n    }\n    else {\n        return [CurveType.ED25519, value];\n    }\n}\nexport function curveTypeFromStr(value) {\n    switch (value) {\n        case \"ed25519\":\n            return CurveType.ED25519;\n        case \"secp256k1\":\n            return CurveType.SECP256K1;\n        default:\n            throw new UnknownCurve();\n    }\n}\nexport class ParsePublicKeyError extends Error {\n}\nexport class InvalidLengthError extends ParsePublicKeyError {\n    constructor(length) {\n        super(`Invalid length: ${length}`);\n        this.length = length;\n    }\n}\nexport class Base58Error extends ParsePublicKeyError {\n    constructor(error) {\n        super(`Base58 error: ${error}`);\n        this.error = error;\n    }\n}\nexport class UnknownCurve extends ParsePublicKeyError {\n    constructor() {\n        super(\"Unknown curve\");\n    }\n}\nexport class PublicKey {\n    constructor(data) {\n        this.data = data;\n        let curve_type = data.charCodeAt(0);\n        let curve_len = data_len(curve_type);\n        if (data.length != curve_len + 1) {\n            throw new InvalidLengthError(data.length);\n        }\n        this.data = data;\n    }\n    curveType() {\n        return this.data.charCodeAt(0);\n    }\n    static fromString(s) {\n        let [curve, key_data] = split_key_type_data(s);\n        let data;\n        try {\n            data = bytes(base58.decode(key_data));\n        }\n        catch (err) {\n            throw new Base58Error(err.message);\n        }\n        return new PublicKey(String.fromCharCode(curve) + data);\n    }\n}\n","import { PromiseResult } from \"./types\";\nconst U64_MAX = 2n ** 64n - 1n;\nconst EVICTED_REGISTER = U64_MAX - 1n;\nexport function log(...params) {\n    env.log(`${params\n        .map(x => x === undefined ? 'undefined' : x) // Stringify undefined\n        .map(x => typeof (x) === 'object' ? JSON.stringify(x) : x) // Convert Objects to strings\n        .join(' ')}` // Convert to string\n    );\n}\nexport function signerAccountId() {\n    env.signer_account_id(0);\n    return env.read_register(0);\n}\nexport function signerAccountPk() {\n    env.signer_account_pk(0);\n    return env.read_register(0);\n}\nexport function predecessorAccountId() {\n    env.predecessor_account_id(0);\n    return env.read_register(0);\n}\nexport function blockIndex() {\n    return env.block_index();\n}\nexport function blockHeight() {\n    return blockIndex();\n}\nexport function blockTimestamp() {\n    return env.block_timestamp();\n}\nexport function epochHeight() {\n    return env.epoch_height();\n}\nexport function attachedDeposit() {\n    return env.attached_deposit();\n}\nexport function prepaidGas() {\n    return env.prepaid_gas();\n}\nexport function usedGas() {\n    return env.used_gas();\n}\nexport function randomSeed() {\n    env.random_seed(0);\n    return env.read_register(0);\n}\nexport function sha256(value) {\n    env.sha256(value, 0);\n    return env.read_register(0);\n}\nexport function keccak256(value) {\n    env.keccak256(value, 0);\n    return env.read_register(0);\n}\nexport function keccak512(value) {\n    env.keccak512(value, 0);\n    return env.read_register(0);\n}\nexport function ripemd160(value) {\n    env.ripemd160(value, 0);\n    return env.read_register(0);\n}\nexport function ecrecover(hash, sig, v, malleabilityFlag) {\n    let ret = env.ecrecover(hash, sig, v, malleabilityFlag, 0);\n    if (ret === 0n) {\n        return null;\n    }\n    return env.read_register(0);\n}\n// NOTE: \"env.panic(msg)\" is not exported, use \"throw Error(msg)\" instead\nexport function panicUtf8(msg) {\n    env.panic_utf8(msg);\n}\nexport function logUtf8(msg) {\n    env.log_utf8(msg);\n}\nexport function logUtf16(msg) {\n    env.log_utf16(msg);\n}\nexport function storageRead(key) {\n    let ret = env.storage_read(key, 0);\n    if (ret === 1n) {\n        return env.read_register(0);\n    }\n    else {\n        return null;\n    }\n}\nexport function storageHasKey(key) {\n    let ret = env.storage_has_key(key);\n    if (ret === 1n) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nexport function validatorStake(accountId) {\n    return env.validator_stake(accountId);\n}\nexport function validatorTotalStake() {\n    return env.validator_total_stake();\n}\nexport function altBn128G1Multiexp(value) {\n    env.alt_bn128_g1_multiexp(value, 0);\n    return env.read_register(0);\n}\nexport function altBn128G1Sum(value) {\n    env.alt_bn128_g1_sum(value, 0);\n    return env.read_register(0);\n}\nexport function altBn128PairingCheck(value) {\n    let ret = env.alt_bn128_pairing_check(value);\n    if (ret === 1n) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nexport function storageGetEvicted() {\n    return env.read_register(EVICTED_REGISTER);\n}\nexport function currentAccountId() {\n    env.current_account_id(0);\n    return env.read_register(0);\n}\nexport function input() {\n    env.input(0);\n    return env.read_register(0);\n}\nexport function storageUsage() {\n    return env.storage_usage();\n}\nexport function accountBalance() {\n    return env.account_balance();\n}\nexport function accountLockedBalance() {\n    return env.account_locked_balance();\n}\nexport function valueReturn(value) {\n    env.value_return(value);\n}\nexport function promiseCreate(accountId, methodName, args, amount, gas) {\n    return env.promise_create(accountId, methodName, args, amount, gas);\n}\nexport function promiseThen(promiseIndex, accountId, methodName, args, amount, gas) {\n    return env.promise_then(promiseIndex, accountId, methodName, args, amount, gas);\n}\nexport function promiseAnd(...promiseIndex) {\n    return env.promise_and(...promiseIndex);\n}\nexport function promiseBatchCreate(accountId) {\n    return env.promise_batch_create(accountId);\n}\nexport function promiseBatchThen(promiseIndex, accountId) {\n    return env.promise_batch_then(promiseIndex, accountId);\n}\nexport function promiseBatchActionCreateAccount(promiseIndex) {\n    env.promise_batch_action_create_account(promiseIndex);\n}\nexport function promiseBatchActionDeployContract(promiseIndex, code) {\n    env.promise_batch_action_deploy_contract(promiseIndex, code);\n}\nexport function promiseBatchActionFunctionCall(promiseIndex, methodName, args, amount, gas) {\n    env.promise_batch_action_function_call(promiseIndex, methodName, args, amount, gas);\n}\nexport function promiseBatchActionTransfer(promiseIndex, amount) {\n    env.promise_batch_action_transfer(promiseIndex, amount);\n}\nexport function promiseBatchActionStake(promiseIndex, amount, publicKey) {\n    env.promise_batch_action_stake(promiseIndex, amount, publicKey);\n}\nexport function promiseBatchActionAddKeyWithFullAccess(promiseIndex, publicKey, nonce) {\n    env.promise_batch_action_add_key_with_full_access(promiseIndex, publicKey, nonce);\n}\nexport function promiseBatchActionAddKeyWithFunctionCall(promiseIndex, publicKey, nonce, allowance, receiverId, methodNames) {\n    env.promise_batch_action_add_key_with_function_call(promiseIndex, publicKey, nonce, allowance, receiverId, methodNames);\n}\nexport function promiseBatchActionDeleteKey(promiseIndex, publicKey) {\n    env.promise_batch_action_delete_key(promiseIndex, publicKey);\n}\nexport function promiseBatchActionDeleteAccount(promiseIndex, beneficiaryId) {\n    env.promise_batch_action_delete_account(promiseIndex, beneficiaryId);\n}\nexport function promiseBatchActionFunctionCallWeight(promiseIndex, methodName, args, amount, gas, weight) {\n    env.promise_batch_action_function_call_weight(promiseIndex, methodName, args, amount, gas, weight);\n}\nexport function promiseResultsCount() {\n    return env.promise_results_count();\n}\nexport function promiseResult(resultIdx) {\n    let status = env.promise_result(resultIdx, 0);\n    if (status == PromiseResult.Successful) {\n        return env.read_register(0);\n    }\n    else {\n        throw Error(`Promise result ${status == PromiseResult.Failed ? \"Failed\" :\n            status == PromiseResult.NotReady ? \"NotReady\" : status}`);\n    }\n}\nexport function promiseReturn(promiseIdx) {\n    env.promise_return(promiseIdx);\n}\nexport function storageWrite(key, value) {\n    let exist = env.storage_write(key, value, EVICTED_REGISTER);\n    if (exist === 1n) {\n        return true;\n    }\n    return false;\n}\nexport function storageRemove(key) {\n    let exist = env.storage_remove(key, EVICTED_REGISTER);\n    if (exist === 1n) {\n        return true;\n    }\n    return false;\n}\nexport function storageByteCost() {\n    return 10000000000000000000n;\n}\n","import * as near from \"./api\";\nexport function initialize({}) {\n    return function (target, key, descriptor) {\n    };\n}\nexport function call({ privateFunction = false, payableFunction = false }) {\n    return function (target, key, descriptor) {\n        const originalMethod = descriptor.value;\n        descriptor.value = function (...args) {\n            if (privateFunction && near.predecessorAccountId() !== near.currentAccountId()) {\n                throw Error(\"Function is private\");\n            }\n            if (!payableFunction && near.attachedDeposit() > BigInt(0)) {\n                throw Error(\"Function is not payable\");\n            }\n            return originalMethod.apply(this, args);\n        };\n    };\n}\nexport function view({}) {\n    return function (target, key, descriptor) {\n    };\n}\nexport function NearBindgen({ requireInit = false }) {\n    return (target) => {\n        return class extends target {\n            static _create() {\n                return new target();\n            }\n            static _getState() {\n                const rawState = near.storageRead(\"STATE\");\n                return rawState ? this._deserialize(rawState) : null;\n            }\n            static _saveToStorage(obj) {\n                near.storageWrite(\"STATE\", this._serialize(obj));\n            }\n            static _getArgs() {\n                return JSON.parse(near.input() || \"{}\");\n            }\n            static _serialize(value) {\n                return JSON.stringify(value);\n            }\n            static _deserialize(value) {\n                return JSON.parse(value);\n            }\n            static _reconstruct(classObject, plainObject) {\n                for (const item in classObject) {\n                    if (classObject[item].constructor?.deserialize !== undefined) {\n                        classObject[item] = classObject[item].constructor.deserialize(plainObject[item]);\n                    }\n                    else {\n                        classObject[item] = plainObject[item];\n                    }\n                }\n                return classObject;\n            }\n            static _requireInit() {\n                return requireInit;\n            }\n        };\n    };\n}\n","import * as near from '../api';\nexport class LookupMap {\n    constructor(keyPrefix) {\n        this.keyPrefix = keyPrefix;\n    }\n    containsKey(key) {\n        let storageKey = this.keyPrefix + JSON.stringify(key);\n        return near.storageHasKey(storageKey);\n    }\n    get(key) {\n        let storageKey = this.keyPrefix + JSON.stringify(key);\n        let raw = near.storageRead(storageKey);\n        if (raw !== null) {\n            return JSON.parse(raw);\n        }\n        return null;\n    }\n    remove(key) {\n        let storageKey = this.keyPrefix + JSON.stringify(key);\n        if (near.storageRemove(storageKey)) {\n            return JSON.parse(near.storageGetEvicted());\n        }\n        return null;\n    }\n    set(key, value) {\n        let storageKey = this.keyPrefix + JSON.stringify(key);\n        let storageValue = JSON.stringify(value);\n        if (near.storageWrite(storageKey, storageValue)) {\n            return JSON.parse(near.storageGetEvicted());\n        }\n        return null;\n    }\n    extend(objects) {\n        for (let kv of objects) {\n            this.set(kv[0], kv[1]);\n        }\n    }\n    serialize() {\n        return JSON.stringify(this);\n    }\n    // converting plain object to class object\n    static deserialize(data) {\n        return new LookupMap(data.keyPrefix);\n    }\n}\n","import * as near from \"./api\";\nexport class PromiseAction {\n}\nexport class CreateAccount extends PromiseAction {\n    add(promise_index) {\n        near.promiseBatchActionCreateAccount(promise_index);\n    }\n}\nexport class DeployContract extends PromiseAction {\n    constructor(code) {\n        super();\n        this.code = code;\n    }\n    add(promise_index) {\n        near.promiseBatchActionDeployContract(promise_index, this.code);\n    }\n}\nexport class FunctionCall extends PromiseAction {\n    constructor(function_name, args, amount, gas) {\n        super();\n        this.function_name = function_name;\n        this.args = args;\n        this.amount = amount;\n        this.gas = gas;\n    }\n    add(promise_index) {\n        near.promiseBatchActionFunctionCall(promise_index, this.function_name, this.args, this.amount, this.gas);\n    }\n}\nexport class FunctionCallWeight extends PromiseAction {\n    constructor(function_name, args, amount, gas, weight) {\n        super();\n        this.function_name = function_name;\n        this.args = args;\n        this.amount = amount;\n        this.gas = gas;\n        this.weight = weight;\n    }\n    add(promise_index) {\n        near.promiseBatchActionFunctionCallWeight(promise_index, this.function_name, this.args, this.amount, this.gas, this.weight);\n    }\n}\nexport class Transfer extends PromiseAction {\n    constructor(amount) {\n        super();\n        this.amount = amount;\n    }\n    add(promise_index) {\n        near.promiseBatchActionTransfer(promise_index, this.amount);\n    }\n}\nexport class Stake extends PromiseAction {\n    constructor(amount, public_key) {\n        super();\n        this.amount = amount;\n        this.public_key = public_key;\n    }\n    add(promise_index) {\n        near.promiseBatchActionStake(promise_index, this.amount, this.public_key.data);\n    }\n}\nexport class AddFullAccessKey extends PromiseAction {\n    constructor(public_key, nonce) {\n        super();\n        this.public_key = public_key;\n        this.nonce = nonce;\n    }\n    add(promise_index) {\n        near.promiseBatchActionAddKeyWithFullAccess(promise_index, this.public_key.data, this.nonce);\n    }\n}\nexport class AddAccessKey extends PromiseAction {\n    constructor(public_key, allowance, receiver_id, function_names, nonce) {\n        super();\n        this.public_key = public_key;\n        this.allowance = allowance;\n        this.receiver_id = receiver_id;\n        this.function_names = function_names;\n        this.nonce = nonce;\n    }\n    add(promise_index) {\n        near.promiseBatchActionAddKeyWithFunctionCall(promise_index, this.public_key.data, this.nonce, this.allowance, this.receiver_id, this.function_names);\n    }\n}\nexport class DeleteKey extends PromiseAction {\n    constructor(public_key) {\n        super();\n        this.public_key = public_key;\n    }\n    add(promise_index) {\n        near.promiseBatchActionDeleteKey(promise_index, this.public_key.data);\n    }\n}\nexport class DeleteAccount extends PromiseAction {\n    constructor(beneficiary_id) {\n        super();\n        this.beneficiary_id = beneficiary_id;\n    }\n    add(promise_index) {\n        near.promiseBatchActionDeleteAccount(promise_index, this.beneficiary_id);\n    }\n}\nclass PromiseSingle {\n    constructor(account_id, actions, after, promise_index) {\n        this.account_id = account_id;\n        this.actions = actions;\n        this.after = after;\n        this.promise_index = promise_index;\n    }\n    constructRecursively() {\n        if (this.promise_index !== null) {\n            return this.promise_index;\n        }\n        let promise_index;\n        if (this.after) {\n            promise_index = near.promiseBatchThen(this.after.constructRecursively(), this.account_id);\n        }\n        else {\n            promise_index = near.promiseBatchCreate(this.account_id);\n        }\n        for (let action of this.actions) {\n            action.add(promise_index);\n        }\n        this.promise_index = promise_index;\n        return promise_index;\n    }\n}\nexport class PromiseJoint {\n    constructor(promise_a, promise_b, promise_index) {\n        this.promise_a = promise_a;\n        this.promise_b = promise_b;\n        this.promise_index = promise_index;\n    }\n    constructRecursively() {\n        if (this.promise_index !== null) {\n            return this.promise_index;\n        }\n        let res = near.promiseAnd(BigInt(this.promise_a.constructRecursively()), BigInt(this.promise_b.constructRecursively()));\n        this.promise_index = res;\n        return res;\n    }\n}\nexport class NearPromise {\n    constructor(subtype, should_return) {\n        this.subtype = subtype;\n        this.should_return = should_return;\n    }\n    static new(account_id) {\n        let subtype = new PromiseSingle(account_id, [], null, null);\n        let ret = new NearPromise(subtype, false);\n        return ret;\n    }\n    add_action(action) {\n        if (this.subtype instanceof PromiseJoint) {\n            throw new Error(\"Cannot add action to a joint promise.\");\n        }\n        else {\n            this.subtype.actions.push(action);\n        }\n        return this;\n    }\n    createAccount() {\n        return this.add_action(new CreateAccount());\n    }\n    deployContract(code) {\n        return this.add_action(new DeployContract(code));\n    }\n    functionCall(function_name, args, amount, gas) {\n        return this.add_action(new FunctionCall(function_name, args, amount, gas));\n    }\n    functionCallWeight(function_name, args, amount, gas, weight) {\n        return this.add_action(new FunctionCallWeight(function_name, args, amount, gas, weight));\n    }\n    transfer(amount) {\n        return this.add_action(new Transfer(amount));\n    }\n    stake(amount, public_key) {\n        return this.add_action(new Stake(amount, public_key));\n    }\n    addFullAccessKey(public_key) {\n        return this.addFullAccessKeyWithNonce(public_key, 0n);\n    }\n    addFullAccessKeyWithNonce(public_key, nonce) {\n        return this.add_action(new AddFullAccessKey(public_key, nonce));\n    }\n    addAccessKey(public_key, allowance, receiver_id, method_names) {\n        return this.addAccessKeyWithNonce(public_key, allowance, receiver_id, method_names, 0n);\n    }\n    addAccessKeyWithNonce(public_key, allowance, receiver_id, method_names, nonce) {\n        return this.add_action(new AddAccessKey(public_key, allowance, receiver_id, method_names, nonce));\n    }\n    deleteKey(public_key) {\n        return this.add_action(new DeleteKey(public_key));\n    }\n    deleteAccount(beneficiary_id) {\n        return this.add_action(new DeleteAccount(beneficiary_id));\n    }\n    and(other) {\n        let subtype = new PromiseJoint(this, other, null);\n        let ret = new NearPromise(subtype, false);\n        return ret;\n    }\n    then(other) {\n        if (other.subtype instanceof PromiseSingle) {\n            if (other.subtype.after !== null) {\n                throw new Error(\"Cannot callback promise which is already scheduled after another\");\n            }\n            other.subtype.after = this;\n        }\n        else {\n            throw new Error(\"Cannot callback joint promise.\");\n        }\n        return other;\n    }\n    asReturn() {\n        this.should_return = true;\n        return this;\n    }\n    constructRecursively() {\n        let res = this.subtype.constructRecursively();\n        if (this.should_return) {\n            near.promiseReturn(res);\n        }\n        return res;\n    }\n    // Called by NearBindgen, when return object is a NearPromise instance.\n    onReturn() {\n        this.asReturn().constructRecursively();\n    }\n}\n","export enum Position {\n  None = 0,\n  Bearish = 1,\n  Bullish = 2,\n}\n\nexport class BetInfo {\n  position: Position;\n  amount: string;\n  claimed: boolean;\n\n  constructor(position: Position, amount: string, claimed: boolean) {\n    this.position = position;\n    this.amount = amount;\n    this.claimed = claimed;\n  }\n}\n","export class Round {\n  epoch: string;\n  startTimestamp: string;\n  lockTimestamp: string;\n  closeTimestamp: string;\n  lockPrice: string;\n  closePrice: string;\n  totalAmount: string;\n  bullAmount: string;\n  bearAmount: string;\n  rewardBaseCalAmount: string;\n  rewardAmount: string;\n  oracleCalled: boolean;\n\n  constructor(\n    epoch: string,\n    startTimestamp: string,\n    lockTimestamp: string,\n    closeTimestamp: string,\n    lockPrice: string,\n    closePrice: string,\n    totalAmount: string,\n    bullAmount: string,\n    bearAmount: string,\n    rewardBaseCalAmount: string,\n    rewardAmount: string,\n    oracleCalled: boolean\n  ) {\n    this.epoch = epoch;\n    this.startTimestamp = startTimestamp;\n    this.lockTimestamp = lockTimestamp;\n    this.closeTimestamp = closeTimestamp;\n    this.lockPrice = lockPrice;\n    this.closePrice = closePrice;\n    this.totalAmount = totalAmount;\n    this.bullAmount = bullAmount;\n    this.bearAmount = bearAmount;\n    this.rewardBaseCalAmount = rewardBaseCalAmount;\n    this.rewardAmount = rewardAmount;\n    this.oracleCalled = oracleCalled;\n  }\n}\n","import {\n  NearBindgen,\n  near,\n  call,\n  view,\n  initialize,\n  assert,\n  LookupMap,\n  UnorderedSet,\n  NearPromise,\n} from \"near-sdk-js\";\nimport { BetInfo, Position } from \"./BetInfo\";\nimport { Round } from \"./Round\";\nimport { PricesResponse } from \"./Oracle\";\n\nenum Bool {\n  False = 0,\n  True = 1,\n}\n\n@NearBindgen({})\nclass PredictionMarket {\n  genesisLockOnce: Bool = Bool.False;\n  genesisStartOnce: Bool = Bool.False;\n\n  owner: string = \"admin.idk.near\";\n  pendingOwner: string = \"\";\n\n  oracle: string = \"priceoracle.testnet\";\n  oracleParams: string = JSON.stringify({ asset_ids: [\"wrap.testnet\"] });\n  oracleGas: string = \"50000000000000\";\n  timeDelay: string = \"120000000000\";\n  assetId: string = \"wrap.testnet\";\n\n  minBid: string = \"1000\";\n  duration: string = \"120000000000\";\n\n  feeRate: string = \"10\";\n  feePrecision: string = \"1000\";\n  feeTreasury: string = \"0\";\n\n  currentEpoch: number = 0;\n\n  bids: LookupMap = new LookupMap(\"b\");\n  rounds: LookupMap = new LookupMap(\"r\");\n  userRounds: LookupMap = new LookupMap(\"u\");\n\n  @initialize({})\n  init({ owner, manager }: { owner: string; manager: string }) {\n    this.owner = owner;\n  }\n\n  // VIEW\n\n  @view({})\n  getState() {\n    return {\n      genesisLockOnce: this.genesisLockOnce ? 1 : 0,\n      genesisStartOnce: this.genesisStartOnce ? 1 : 0,\n      owner: this.owner,\n      pendingOwner: this.pendingOwner,\n      oracle: this.oracle,\n      minBid: this.minBid.toString(),\n      duration: this.duration.toString(),\n      feeRate: this.feeRate.toString(),\n      feePrecision: this.feePrecision.toString(),\n      feeTreasury: this.feeTreasury.toString(),\n      currentEpoch: this.currentEpoch,\n    };\n  }\n\n  @view({})\n  getRound({ epoch }: { epoch: number }) {\n    return this.rounds.get(epoch.toString());\n  }\n\n  @view({})\n  getUserRounds({ account }: { account: string }) {\n    return this.userRounds.get(account);\n  }\n\n  @view({})\n  getBid({ epoch, account }: { epoch: number; account: string }) {\n    return this.bids.get(epoch.toString() + account);\n  }\n\n  // PUBLIC\n\n  /**\n   * @notice Make the bet on the price move\n   * @param epoch: epoch on each the user want to participate; must be current epoch\n   * @param position: bullish or bearish\n   */\n  @call({ payableFunction: true })\n  bet({ epoch, position }: { epoch: number; position: Position }): void {\n    const sender = near.predecessorAccountId();\n    const userRounds = this._getUserRounds(sender);\n\n    assert(epoch == this.currentEpoch, \"Wrong epoch\");\n    assert(\n      (near.attachedDeposit() as bigint) >= BigInt(this.minBid),\n      \"Bid is too low\"\n    );\n    assert(position != Position.None, \"Position should be selected\");\n    assert(\n      !userRounds.includes(epoch),\n      \"User already participated in this round\"\n    );\n\n    const amount: bigint = near.attachedDeposit();\n    let round = this._getRound(epoch);\n    round.totalAmount = (BigInt(round.totalAmount) + amount).toString();\n    if (position == Position.Bearish) {\n      round.bearAmount = (BigInt(round.bearAmount) + amount).toString();\n    } else {\n      round.bullAmount = (BigInt(round.bullAmount) + amount).toString();\n    }\n\n    let betInfo = this._getBetInfo(epoch, sender);\n    betInfo.position = position;\n    betInfo.amount = amount.toString();\n    userRounds.push(epoch);\n\n    this._setRound(epoch, round);\n    this._setBetInfo(epoch, sender, betInfo);\n    this._setUserRounds(sender, userRounds);\n\n    near.log(`${sender} bids in the ${epoch} epoch. Amount is ${amount}`);\n  }\n\n  /**\n   * @notice Claim rewards for the successful bids\n   * @param epochs: epochs in which the user has unclaimed rewards\n   */\n  @call({})\n  claim({ epochs }: { epochs: number[] }): void {\n    let reward = BigInt(0);\n    const sender = near.predecessorAccountId();\n\n    for (let epoch of epochs) {\n      let round = this._getRound(epoch);\n\n      assert(BigInt(round.startTimestamp) != BigInt(0), \"Round isn't started\");\n      assert(\n        BigInt(round.closeTimestamp) < near.blockTimestamp(),\n        \"Round isn't ended\"\n      );\n      assert(round.oracleCalled, \"Oracle isn't called\");\n      assert(this.claimable(epoch, sender), \"Claim is not eligible\");\n\n      let betInfo = this._getBetInfo(epoch, sender);\n      const epochReward =\n        (BigInt(betInfo.amount) * BigInt(round.rewardAmount)) /\n        BigInt(round.rewardBaseCalAmount);\n      reward += epochReward;\n      betInfo.claimed = true;\n\n      this._setBetInfo(epoch, sender, betInfo);\n\n      near.log(`${sender} claimed ${epochReward} for ${epoch} round.`);\n    }\n\n    if (reward > 0) {\n      this._safeTransfer(sender, reward);\n    }\n  }\n\n  /**\n   * @notice Request price and rounds updates\n   */\n  @call({})\n  reveal({}: {}): NearPromise {\n    assert(\n      this.genesisLockOnce === Bool.True && this.genesisStartOnce === Bool.True,\n      \"Genesis rounds aren't finished\"\n    );\n\n    return this._requestPrice(this.currentEpoch, \"_revealCallback\");\n  }\n\n  /**\n   * @notice Start new round, lock previous and end the one before\n   * @param epoch: epoch on each the price is updated; must be current epoch\n   */\n  @call({ privateFunction: true })\n  _revealCallback({ epoch }: { epoch: number }): void {\n    assert(epoch == this.currentEpoch, \"Epoch is wrong\");\n\n    let price = this._getPrice();\n    this._safeLockRound(this.currentEpoch, price);\n    this._safeEndRound(this.currentEpoch - 1, price);\n    this._calculateRewards(this.currentEpoch - 1);\n\n    this.currentEpoch += 1;\n    this._safeStartRound(this.currentEpoch);\n  }\n\n  /**\n   * @notice Start the first round\n   */\n  @call({})\n  genesisStartRound({}: {}): void {\n    assert(this.genesisStartOnce == Bool.False, \"Genesis round is started\");\n\n    this.currentEpoch += 1;\n    this._startRound(this.currentEpoch);\n    this.genesisStartOnce = Bool.True;\n  }\n\n  /**\n   * @notice Request price and management of first 2 rounds\n   */\n  @call({})\n  genesisLockRound({}: {}): NearPromise {\n    assert(this.genesisStartOnce === Bool.True, \"Genesis round is not started\");\n    assert(this.genesisLockOnce === Bool.False, \"Genesis round is locked\");\n\n    return this._requestPrice(this.currentEpoch, \"_genesisLockRoundCallback\");\n  }\n\n  /**\n   * @notice Start second round and lock first round\n   * @param epoch: epoch on each the price is updated; must be current epoch\n   */\n  @call({ privateFunction: true })\n  _genesisLockRoundCallback({ epoch }: { epoch: number }): void {\n    assert(epoch == this.currentEpoch, \"Epoch is wrong\");\n\n    let price = this._getPrice();\n    this._safeLockRound(this.currentEpoch, price);\n\n    this.currentEpoch += 1;\n    this._startRound(this.currentEpoch);\n    this.genesisLockOnce = Bool.True;\n  }\n\n  // ADMIN\n\n  @call({})\n  setMinBid({ minBid }: { minBid: string }): void {\n    this._assertOwner();\n    BigInt(this.minBid);\n    this.minBid = minBid;\n  }\n\n  @call({})\n  setDuration({ duration }: { duration: string }): void {\n    this._assertOwner();\n    BigInt(this.duration);\n    this.duration = duration;\n  }\n\n  @call({})\n  setFeeRate({ feeRate }: { feeRate: string }): void {\n    this._assertOwner();\n    BigInt(this.feeRate);\n    this.feeRate = feeRate;\n  }\n\n  @call({})\n  claimFee({ receiver }: { receiver: string }): void {\n    this._assertOwner();\n    this._safeTransfer(receiver, BigInt(this.feeTreasury));\n    this.feeTreasury = \"0\";\n  }\n\n  @call({})\n  transferOwnership({ pendingOwner }: { pendingOwner: string }): void {\n    this._assertOwner();\n    this.pendingOwner = pendingOwner;\n  }\n\n  @call({})\n  confirmTransferOwnership({}: {}): void {\n    this._assertPendingOwner();\n    this.owner = this.pendingOwner;\n    this.pendingOwner = \"\";\n  }\n\n  // INTERNAL\n\n  /**\n   * @notice Calculate round results and rewards\n   * @param epoch: epoch on which the rewards are calculated\n   */\n  _calculateRewards(epoch: number): void {\n    let round = this._getRound(epoch);\n\n    assert(\n      BigInt(round.rewardBaseCalAmount) == BigInt(0) &&\n        BigInt(round.rewardAmount) == BigInt(0),\n      \"Reward calculated\"\n    );\n\n    let treasuryAmt;\n    if (round.closePrice > round.lockPrice) {\n      round.rewardBaseCalAmount = round.bullAmount;\n      treasuryAmt =\n        (BigInt(round.totalAmount) * BigInt(this.feeRate)) /\n        BigInt(this.feePrecision);\n      round.rewardAmount = (BigInt(round.totalAmount) - treasuryAmt).toString();\n    } else if (round.closePrice < round.lockPrice) {\n      round.rewardBaseCalAmount = round.bearAmount;\n      treasuryAmt =\n        (BigInt(round.totalAmount) * BigInt(this.feeRate)) /\n        BigInt(this.feePrecision);\n      round.rewardAmount = (BigInt(round.totalAmount) - treasuryAmt).toString();\n    } else {\n      round.rewardBaseCalAmount = \"0\";\n      round.rewardAmount = \"0\";\n      treasuryAmt = BigInt(round.totalAmount);\n    }\n\n    this.feeTreasury = (BigInt(this.feeTreasury) + treasuryAmt).toString();\n    this._setRound(epoch, round);\n\n    near.log(`Rewards for ${epoch} round calculated`);\n  }\n\n  /**\n   * @notice Lock round i.e. stop accepting the bids for the round\n   * @param epoch: what epoch is to be locked\n   * @param price: asset's price at the epoch lock\n   */\n  _safeLockRound(epoch: number, price: bigint): void {\n    let round = this._getRound(epoch);\n\n    assert(\n      BigInt(round.startTimestamp) != BigInt(0),\n      \"Round n-1 is not started\"\n    );\n    assert(\n      BigInt(round.lockTimestamp) < near.blockTimestamp(),\n      \"Lock is too early\"\n    );\n\n    round.closeTimestamp = (\n      near.blockTimestamp() + BigInt(this.duration)\n    ).toString();\n    round.lockPrice = price.toString();\n\n    this._setRound(epoch, round);\n\n    near.log(`The round ${epoch} locked`);\n  }\n\n  /**\n   * @notice End round and make available for rewards distribution\n   * @param epoch: what epoch is to be locked\n   * @param price: asset's price at which the epoch is closed\n   */\n  _safeEndRound(epoch: number, price: bigint): void {\n    let round = this._getRound(epoch);\n\n    assert(\n      BigInt(round.lockTimestamp) != BigInt(0),\n      \"Round n-1 is not started\"\n    );\n    assert(\n      BigInt(round.closeTimestamp) < near.blockTimestamp(),\n      \"End is too early\"\n    );\n\n    round.closePrice = price.toString();\n    round.oracleCalled = true;\n\n    this._setRound(epoch, round);\n\n    near.log(`The round ${epoch} closed`);\n  }\n\n  /**\n   * @notice Check all constraints and start new round\n   * @param epoch: new epoch\n   */\n  _safeStartRound(epoch: number): void {\n    let oldRound = this._getRound(epoch - 2);\n\n    assert(this.genesisStartOnce === Bool.True, \"Init game first\");\n    assert(\n      BigInt(oldRound.closeTimestamp) != BigInt(0),\n      \"Round n-2 is not ended\"\n    );\n    assert(\n      BigInt(oldRound.closeTimestamp) < near.blockTimestamp(),\n      \"Round n-2 is too young\"\n    );\n\n    this._startRound(epoch);\n  }\n\n  /**\n   * @notice Start new round\n   * @param epoch: new epoch\n   */\n  _startRound(epoch: number): void {\n    let round = new Round(\n      epoch.toFixed(),\n      near.blockTimestamp().toString(),\n      (near.blockTimestamp() + BigInt(this.duration)).toString(),\n      (near.blockTimestamp() + BigInt(2) * BigInt(this.duration)).toString(),\n      \"0\",\n      \"0\",\n      \"0\",\n      \"0\",\n      \"0\",\n      \"0\",\n      \"0\",\n      false\n    );\n    this._setRound(epoch, round);\n    near.log(`The round ${epoch} started`);\n  }\n\n  // HELPERS\n  _assertOwner(): void {\n    assert(near.predecessorAccountId() == this.owner, \"Not an owner\");\n  }\n\n  _assertPendingOwner(): void {\n    assert(near.predecessorAccountId() == this.pendingOwner, \"Not an owner\");\n  }\n\n  _getBetInfo(epoch: number, owner: string): BetInfo {\n    let betInfo: any = this.bids.get(epoch.toString() + owner);\n    if (betInfo === null) {\n      return new BetInfo(Position.None, \"0\", false);\n    }\n    return new BetInfo(betInfo.position, betInfo.amount, betInfo.claimed);\n  }\n\n  _getUserRounds(owner: string): Array<number> {\n    let userRounds: any = this.userRounds.get(owner);\n\n    if (userRounds !== null) {\n      return userRounds;\n    }\n\n    return [];\n  }\n\n  _getRound(epoch: number): Round {\n    let round: any = this.rounds.get(epoch.toString());\n    assert(round != null, \"Round doesn't exist\");\n    return new Round(\n      round.epoch,\n      round.startTimestamp,\n      round.lockTimestamp,\n      round.closeTimestamp,\n      round.lockPrice,\n      round.closePrice,\n      round.totalAmount,\n      round.bullAmount,\n      round.bearAmount,\n      round.rewardBaseCalAmount,\n      round.rewardAmount,\n      round.oracleCalled\n    );\n  }\n\n  _getPrice(): bigint {\n    const pricesInfo = JSON.parse(near.promiseResult(0)) as PricesResponse;\n    let nearInfo = pricesInfo.prices[0];\n\n    assert(nearInfo.asset_id == this.assetId, \"Asset id is wrong\");\n\n    return BigInt(nearInfo.price.multiplier);\n  }\n\n  _requestPrice(epoch: number, callback: string): NearPromise {\n    const promise = NearPromise.new(this.oracle)\n      .functionCall(\n        \"get_price_data\",\n        this.oracleParams,\n        BigInt(0),\n        BigInt(this.oracleGas)\n      )\n      .then(\n        NearPromise.new(near.currentAccountId()).functionCall(\n          callback,\n          JSON.stringify({ epoch }),\n          BigInt(0),\n          BigInt(this.oracleGas)\n        )\n      );\n\n    return promise;\n  }\n\n  _setBetInfo(epoch: number, owner: string, betInfo: BetInfo): void {\n    this.bids.set(epoch.toString() + owner, betInfo);\n  }\n\n  _setRound(epoch: number, round: Round): void {\n    this.rounds.set(epoch.toString(), round);\n  }\n\n  _setUserRounds(owner: string, userRounds: Array<number>): void {\n    this.userRounds.set(owner, userRounds);\n  }\n\n  _safeTransfer(receiver: string, amount: bigint): void {\n    const promise = near.promiseBatchCreate(receiver);\n    near.promiseBatchActionTransfer(promise, amount);\n  }\n\n  @view({})\n  claimable(epoch: number, owner: string): boolean {\n    let round = this._getRound(epoch);\n    let betInfo = this._getBetInfo(epoch, owner);\n\n    if (round.lockPrice == round.closePrice) {\n      return false;\n    }\n    return (\n      round.oracleCalled &&\n      BigInt(betInfo.amount) != BigInt(0) &&\n      !betInfo.claimed &&\n      ((BigInt(round.closePrice) > BigInt(round.lockPrice) &&\n        betInfo.position == Position.Bullish) ||\n        (BigInt(round.closePrice) < BigInt(round.lockPrice) &&\n          betInfo.position == Position.Bearish))\n    );\n  }\n}\n"],"names":["PromiseResult","PromiseError","assert","b","str","Error","assertNumber","n","Number","isSafeInteger","chain","args","wrap","a","c","encode","Array","from","reverse","reduce","acc","i","undefined","decode","alphabet","digits","isArray","length","map","input","letter","index","indexOf","join","separator","to","split","padding","bits","chr","data","push","end","slice","normalize","fn","convertRadix","pos","res","forEach","d","carry","done","digit","digitBase","Math","floor","gcd","radix2carry","convertRadix2","mask","radix","num","bytes","Uint8Array","radix2","revPadding","unsafeWrapper","apply","e","base16","base32","s","toUpperCase","replace","base64","base64url","genBase58","abc","base58","XMR_BLOCK_LEN","base58xmr","block","subarray","padStart","blockLen","j","concat","BECH_ALPHABET","POLYMOD_GENERATORS","bech32Polymod","pre","chk","bechChecksum","prefix","words","encodingConst","len","charCodeAt","v","genBech32","encoding","ENCODING_CONST","_words","fromWords","toWords","fromWordsUnsafe","limit","actualLength","TypeError","toLowerCase","lowered","sepIndex","lastIndexOf","sum","endsWith","decodeUnsafe","decodeToBytes","utf8","TextDecoder","TextEncoder","hex","CODERS","Object","keys","CurveType","U64_MAX","EVICTED_REGISTER","log","params","env","x","JSON","stringify","predecessorAccountId","predecessor_account_id","read_register","blockTimestamp","block_timestamp","attachedDeposit","attached_deposit","storageRead","key","ret","storage_read","storageHasKey","storage_has_key","storageGetEvicted","currentAccountId","current_account_id","promiseAnd","promiseIndex","promise_and","promiseBatchCreate","accountId","promise_batch_create","promiseBatchThen","promise_batch_then","promiseBatchActionCreateAccount","promise_batch_action_create_account","promiseBatchActionDeployContract","code","promise_batch_action_deploy_contract","promiseBatchActionFunctionCall","methodName","amount","gas","promise_batch_action_function_call","promiseBatchActionTransfer","promise_batch_action_transfer","promiseBatchActionStake","publicKey","promise_batch_action_stake","promiseBatchActionAddKeyWithFullAccess","nonce","promise_batch_action_add_key_with_full_access","promiseBatchActionAddKeyWithFunctionCall","allowance","receiverId","methodNames","promise_batch_action_add_key_with_function_call","promiseBatchActionDeleteKey","promise_batch_action_delete_key","promiseBatchActionDeleteAccount","beneficiaryId","promise_batch_action_delete_account","promiseBatchActionFunctionCallWeight","weight","promise_batch_action_function_call_weight","promiseResult","resultIdx","status","promise_result","Successful","Failed","NotReady","promiseReturn","promiseIdx","promise_return","storageWrite","value","exist","storage_write","storageRemove","storage_remove","initialize","target","descriptor","call","privateFunction","payableFunction","originalMethod","near","BigInt","view","NearBindgen","requireInit","_create","_getState","rawState","_deserialize","_saveToStorage","obj","_serialize","_getArgs","parse","_reconstruct","classObject","plainObject","item","constructor","deserialize","_requireInit","LookupMap","keyPrefix","containsKey","storageKey","get","raw","remove","set","storageValue","extend","objects","kv","serialize","PromiseAction","CreateAccount","add","promise_index","DeployContract","FunctionCall","function_name","FunctionCallWeight","Transfer","Stake","public_key","AddFullAccessKey","AddAccessKey","receiver_id","function_names","DeleteKey","DeleteAccount","beneficiary_id","PromiseSingle","account_id","actions","after","constructRecursively","action","PromiseJoint","promise_a","promise_b","NearPromise","subtype","should_return","new","add_action","createAccount","deployContract","functionCall","functionCallWeight","transfer","stake","addFullAccessKey","addFullAccessKeyWithNonce","addAccessKey","method_names","addAccessKeyWithNonce","deleteKey","deleteAccount","and","other","then","asReturn","onReturn","Position","BetInfo","position","claimed","Round","epoch","startTimestamp","lockTimestamp","closeTimestamp","lockPrice","closePrice","totalAmount","bullAmount","bearAmount","rewardBaseCalAmount","rewardAmount","oracleCalled","Bool","PredictionMarket","genesisLockOnce","False","genesisStartOnce","owner","pendingOwner","oracle","oracleParams","asset_ids","oracleGas","timeDelay","assetId","minBid","duration","feeRate","feePrecision","feeTreasury","currentEpoch","bids","rounds","userRounds","init","manager","getState","toString","getRound","getUserRounds","account","getBid","bet","sender","_getUserRounds","None","includes","round","_getRound","Bearish","betInfo","_getBetInfo","_setRound","_setBetInfo","_setUserRounds","claim","epochs","reward","claimable","epochReward","_safeTransfer","reveal","True","_requestPrice","_revealCallback","price","_getPrice","_safeLockRound","_safeEndRound","_calculateRewards","_safeStartRound","genesisStartRound","_startRound","genesisLockRound","_genesisLockRoundCallback","setMinBid","_assertOwner","setDuration","setFeeRate","claimFee","receiver","transferOwnership","confirmTransferOwnership","_assertPendingOwner","treasuryAmt","oldRound","toFixed","pricesInfo","nearInfo","prices","asset_id","multiplier","callback","promise","Bullish"],"mappings":"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"}